SELECT * FROM RHEPQ.REC_TFN_TIPO_FUNCION rttf 

SELECT * FROM RHEPQ.REC_FUN_FUNCION rff 

SELECT * FROM RHEPQ.PLA_MUN_MUNICIPIO ap  rff 

SELECT * FROM RHEPQ.FUN_COD


SELECT 
    ac.constraint_name,
    ac.table_name,
    acc.column_name,
    ac.r_constraint_name AS ref_constraint,
    acc2.table_name AS ref_table,
    acc2.column_name AS ref_column
FROM 
    all_constraints ac
JOIN 
    all_cons_columns acc ON ac.constraint_name = acc.constraint_name
JOIN 
    all_constraints ac2 ON ac.r_constraint_name = ac2.constraint_name
JOIN 
    all_cons_columns acc2 ON ac2.constraint_name = acc2.constraint_name
WHERE 
    ac.constraint_type = 'R'
    AND ac.table_name = 'REC_FUN_FUNCION';

   
   SELECT 
   	B2.FUN_CODIGO , B2.FUN_DESCRIPCION 
   FROM REC_TFN_TIPO_FUNCION B1
   INNER JOIN REC_FUN_FUNCION B2 ON B2.FUN_CODCIA = B1.TFN_CODCIA AND B2.FUN_CODTFN = B1.TFN_CODIGO 
   
   
    SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'REC_TRQ_TIPO_REQUISITO' AND OWNER = 'RHEPQ';
   
   --- ########## TABLAS Estructura Organizativa ############
   
   *Frecuencia de Funciones
   SELECT ROWID,FRE_CODIGO,FRE_NOMBRE FROM REC_FRE_FRECUENCIA
   
   *Exigencias y Desiciones para Cargos
   SELECT ROWID,EXC_CODCIA,EXC_CODIGO,EXC_DESCRIPCION,EXC_TIPO FROM REC_EXC_EXIGENCIA_CARGO WHERE (EXC_CODCIA=:1) and (fasdfasdf)  
   --SELECT (TIPO EXIGENCIA, DECISION)
   
   *--//Tipos y Descripcion de funciones
   SELECT ROWID,TFN_CODCIA,TFN_CODIGO,TFN_NOMBRE,TFN_NOMBRE_CORTO FROM REC_TFN_TIPO_FUNCION WHERE (TFN_CODCIA=:1) and (fasdfasd)
   
   SELECT ROWID,FUN_CODIGO,FUN_DESCRIPCION,FUN_CODTFN,FUN_CODCIA FROM REC_FUN_FUNCION WHERE (FUN_CODCIA=:1) and (fasdf) order by to_number(fun_codigo)  
   
	*--//   Requisitos
   
   SELECT ROWID,TRQ_CODCIA,TRQ_CODIGO,TRQ_NOMBRE,TRQ_NOMBRE_ING,TRQ_NOMBRE_CORTO,TRQ_OPERADOR,TRQ_FILTRO FROM REC_TRQ_TIPO_REQUISITO WHERE (TRQ_CODCIA=:1) and (fasdfasd) order by TRQ_CODCIA, TRQ_CODIGO
   --SELECT (Operador 1: <=, 2: =, 3: >=) (Filtro 1, Filtro 2)
   
   SELECT ROWID,REQ_CODIGO,REQ_NOMBRE,REQ_NOMBRE_ING,REQ_DESCRIPCION,REQ_OPERADOR,REQ_CODTRQ,REQ_CODCIA FROM REC_REQ_REQUISITO WHERE (REQ_CODCIA=:1) and (sdfasdf) order by REQ_CODIGO
   --SELECT (Operador 1: <=, 2: =, 3: >=)
   
--   Manejo de equipo
   
   SELECT ROWID,MEQ_CODCIA,MEQ_CODIGO,MEQ_DESCRIPCION FROM PLA_MEQ_MANEJO_EQUIPO WHERE (MEQ_CODCIA=:1) and (asdfasdf)
   
   *-- areas y Generencias
   
   SELECT ROWID,ARE_CODIGO,ARE_NOMBRE,ARE_CODCIA FROM PLA_ARE_AREA WHERE (ARE_CODCIA=:1) and (fasdfasd)
   
   SELECT ROWID,GER_CODIGO,GER_NOMBRE,GER_CODARE,GER_CODCIA FROM PLA_GER_GERENCIA WHERE (GER_CODCIA=:1) and (fasdfas)
   
   -- Centro de Costo (Partida presupestaria)
   
   SELECT ROWID,CCO_CODIGO,CCO_CODCIA,CCO_DESCRIPCION,CCO_PPR_N1,CCO_PPR_N2,CCO_PPR_N3,CCO_PPR_N4,CCO_PPR_N5,CCO_PPR_N6,CCO_PPR_N7,CCO_VALOR_HORA,CCO_TIPO,CCO_CODGER,CCO_CODARE FROM PLA_CCO_CEN_COSTO WHERE (CCO_CODCIA=:1) and (fasdfasd)
   
   --# Encabezados
   0001 ADMINISTRATIVA FINANCIERA
   0001 GERENCIAL GENERAL
   
   -- Equivalentes para centro de costo
   
   SELECT ROWID,ECC_CODCIA,ECC_CODCCO,ECC_PPR_N1,ECC_PPR_N2,ECC_PPR_N3,ECC_PPR_N4,ECC_PPR_N5,ECC_PPR_N6,ECC_PPR_N7,ECC_DESCRIPCION FROM PLA_ECC_EQUIVALE_CCOSTO WHERE (fasdfas)
   
   -- Unidades Administrativas

   SELECT ROWID,UNI_CODCIA,UNI_CODIGO,UNI_NOMBRE,UNI_DEPENDENCIA,UNI_CODUNI_PADRE,UNI_CEN_COSTO,UNI_CODIGO_2003 FROM PLA_UNI_UNIDAD WHERE (UNI_CODCIA=:1) and (fasdfasd) order by UNI_CODIGO_2003
   
   -- clasificacion para valuaciones de puestos

   SELECT ROWID,CVA_CODCIA,CVA_CODIGO,CVA_DESCRIPCION FROM PLA_CVA_CLASIF_VALUACION WHERE (CVA_CODCIA=:1) and (asdfasdf)
   
   -- Escala de salarios

   SELECT ROWID,CSS_CODIGO,CSS_DESCRIPCION,CSS_MINIMO,CSS_NIVEL2,CSS_MEDIO,CSS_NIVEL4,CSS_MAXIMO,CSS_VALUACION_INICIAL,CSS_VALUACION_FINAL,CSS_CODCVA,CSS_CODCIA FROM PLA_CSS_CLASALARIAL WHERE (CSS_CODCIA=:1) and (fasdfas)
   
   -- niveles de clasificacion categorias

   SELECT ROWID,CCP_CODCIA,CCP_CODIGO,CCP_NOMBRE FROM PLA_CCP_CLASIFICACION WHERE (CCP_CODCIA=:1) and (fasdf)
   
   -- serie de puestos

  SELECT ROWID,TPP_CODCIA,TPP_CODIGO,TPP_DESCRIPCION,TPP_CODCCP FROM PLA_TPP_TIPUESTO WHERE (TPP_CODCIA=:1) and (fasdfasd)
   
   -- clases de puestos

   SELECT ROWID,PUE_CODTPP,PUE_CODIGO,PUE_NOMBRE,PUE_NOMBRE_ING,PUE_DESCRIPCION,PUE_ESTADO,PUE_FECHA_SUPRE,PUE_CODCSS,PUE_CODCPU,PUE_CODCVA,PUE_PUNTAJE_VALUACION,PUE_REQUIERE_EVALUACION,PUE_EDAD_MIN,PUE_EDAD_MAX,PUE_EST_CIVIL,PUE_SEXO,PUE_BONO_VOLUMEN,PUE_PREMIO_VOLUMEN,PUE_BONO_MARCA,PUE_PREMIO_MARCA,PUE_COMISION,PUE_INCENTIVOS,PUE_CEN_COSTO,PUE_CODUNI_GER,PUE_CODUNI_SG,PUE_CODCIA FROM PLA_PUE_PUESTO WHERE (PUE_CODCIA=:1) and (fasdfa)
    
    # Jefe inmediato - ya
    01271 HIDROGRAFO - 01269 HIDROGRAFO
    SELECT ROWID,PLZ_CODCIA,PLZ_CODIGO,PLZ_NOMBRE FROM PLA_PLZ_PLAZA WHERE plz_codtpp = nvl(:1,plz_codtpp) and plz_codpue = nvl(:2,plz_codpue) and (PLZ_CODCIA=:3) and (gdf)
     SELECT ROWID,PSV_CODPLZ_SUPERVISA,PSV_SUPERVISOR_SUPERVISADO,PSV_CODPLZ,PSV_CODCIA FROM REC_PSV_PUESTO_SUPERVISA WHERE psv_supervisor_supervisado = 'P' and (PSV_CODPLZ=:1) and (PSV_CODCIA=:2) and (fasdfas)
    

    # Titulo de puesto a cargo: - ya
    SELECT ROWID,CFU_CODTPP_I,CFU_CODPUE_I,CFU_ACCESO,CFU_CODPUE,CFU_CODTPP,CFU_CODCIA FROM REC_CFU_CARGO_FUNCIONAL WHERE (CFU_CODPUE=:1) and (CFU_CODTPP=:2) and (CFU_CODCIA=:3) and (fasdfasd)
    SELECT ROWID,CFU_CODTPP_I,CFU_CODPUE_I,CFU_ACCESO,CFU_CODPUE,CFU_CODTPP,CFU_CODCIA FROM REC_CFU_CARGO_FUNCIONAL WHERE (fasdfa)
    INSERT INTO REC_CFU_CARGO_FUNCIONAL(CFU_CODTPP_I, CFU_CODPUE_I, CFU_ACCESO, CFU_CODPUE, CFU_CODTPP, CFU_CODCIA) VALUES (:1,:2,:3,:4,:5,:6)  
        ORA-01400: cannot insert NULL into ("RHEPQ"."REC_CFU_CARGO_FUNCIONAL"."CFU_CODTPP")

    # Funciones del puesto: - ya
    SELECT ROWID,FNP_CODTFN,FNP_CODFUN,FNP_PCT_TIEMPO,FNP_CODFRE,FNP_ORDEN,FNP_CODPUE,FNP_CODTPP,FNP_CODCIA FROM REC_FNP_FUNCION_PUESTO WHERE (FNP_CODPUE=:1) and (FNP_CODTPP=:2) and (FNP_CODCIA=:3) and (fasdf) order by fnp_codtfn, fnp_codfre, fnp_orden    
    SELECT ROWID,FNP_CODTFN,FNP_CODFUN,FNP_PCT_TIEMPO,FNP_CODFRE,FNP_ORDEN,FNP_CODPUE,FNP_CODTPP,FNP_CODCIA FROM REC_FNP_FUNCION_PUESTO WHERE (FNP_CODPUE=:1) and (FNP_CODTPP=:2) and (FNP_CODCIA=:3) and (fasdf) order by fnp_codtfn, fnp_codfre, fnp_orden

    # Relaciones internas: - ya
    SELECT ROWID,RII_CODIGO,RII_CODTPP_I,RII_CODPUE_I,RII_CODFRE,RII_OBSERVACION,RII_CODPUE,RII_CODTPP,RII_CODCIA FROM REC_RII_RELACION_INTERNA WHERE (RII_CODPUE=:1) and (RII_CODTPP=:2) and (RII_CODCIA=:3) and (fasdf)
    SELECT ROWID,RII_CODIGO,RII_CODTPP_I,RII_CODPUE_I,RII_CODFRE,RII_OBSERVACION,RII_CODPUE,RII_CODTPP,RII_CODCIA FROM REC_RII_RELACION_INTERNA WHERE (RII_CODPUE=:1) and (RII_CODTPP=:2) and (RII_CODCIA=:3) and (fasdf)

    # Relaciones por unidad: - ya
    SELECT ROWID,RIU_CODIGO,RIU_CODUNI,RIU_CODFRE,RIU_OBSERVACION,RIU_CODPUE,RIU_CODTPP,RIU_CODCIA FROM REC_RIU_RELACION_UNIDAD WHERE (RIU_CODPUE=:1) and (RIU_CODTPP=:2) and (RIU_CODCIA=:3) and (fasdf)

    # Relaciones externas: - ya
    SELECT ROWID,RIE_CODIGO,RIE_DESCRIPCION,RIE_CODFRE,RIE_CODICR,RIE_CODPUE,RIE_CODTPP,RIE_CODCIA FROM REC_RIE_RELACION_EXTERNA WHERE (RIE_CODPUE=:1) and (RIE_CODTPP=:2) and (RIE_CODCIA=:3) and (fasdf)

    # Exigencias del puesto: - ya
    SELECT ROWID,EXP_CODEXC,EXP_CODPUE,EXP_CODTPP,EXP_CODCIA FROM REC_EXP_EXIGENCIA_PUESTO WHERE (exp_codcia, exp_codexc) in (Select exc_codcia, exc_codigo From rec_exc_exigencia_cargo Where exc_tipo = 'E') and (EXP_CODPUE=:1) and (EXP_CODTPP=:2) and (EXP_CODCIA=:3) and (asdfasd)

    # Decisiones del puesto: - ya
    SELECT ROWID,EXP_CODEXC,EXP_CODPUE,EXP_CODTPP,EXP_CODCIA FROM REC_EXP_EXIGENCIA_PUESTO WHERE (exp_codcia, exp_codexc) in (Select exc_codcia, exc_codigo From rec_exc_exigencia_cargo Where exc_tipo = 'D') and (EXP_CODPUE=:1) and (EXP_CODTPP=:2) and (EXP_CODCIA=:3) and (fasdfas)

    # Manejo equipo: - ya
    SELECT ROWID,EQU_CODMEQ,EQU_DESCRIPCION,EQU_CODPUE,EQU_CODTPP,EQU_CODCIA FROM REC_EQU_EQUIPO WHERE (EQU_CODPUE=:1) and (EQU_CODTPP=:2) and (EQU_CODCIA=:3) and (fasdfa)

    # Datos confidenciales: - ya
    SELECT ROWID,RDA_CODIGO,RDA_DESCRIPCION,RDA_ACCESO,RDA_CODPUE,RDA_CODTPP,RDA_CODCIA FROM REC_RDA_RESPONSABILIDAD_DATOS WHERE (RDA_CODPUE=:1) and (RDA_CODTPP=:2) and (RDA_CODCIA=:3) and (gsdgfs)

    # Requisitos del puesto:  - ya
    *Requisitos del puesto
    SELECT ROWID,RPU_CODTRQ,RPU_CODREQ,RPU_TAREA_REPRESENTATIVA,RPU_OPERADOR,RPU_METRICO,RPU_FILTRO,RPU_CODPUE,RPU_CODTPP,RPU_CODCIA FROM REC_RPU_REQUISITO_PUESTO WHERE (RPU_CODPUE=:1) and (RPU_CODTPP=:2) and (RPU_CODCIA=:3) and (fasdf)
    
    *sustituto por requisito  - ya
    SELECT ROWID,RPS_CODTRQ_S,RPS_CODREQ_S,RPS_CODREQ,RPS_CODTRQ,RPS_CODPUE,RPS_CODTPP,RPS_CODCIA FROM REC_RPS_REQ_PUESTO_SUST WHERE (RPS_CODPUE=:1) and (RPS_CODTPP=:2) and (RPS_CODCIA=:3) and (fasdfasd)

   -- catalogo de plazas

   SELECT ROWID,PLZ_CODCIA,PLZ_CODIGO,PLZ_NOMBRE,PLZ_NOMBRE_ING,PLZ_CODTPP,PLZ_CODPUE,PLZ_CODUNI,PLZ_ESTADO,PLZ_DISPRESP,PLZ_PPR_N8,PLZ_CODTMO,PLZ_CODUBI,PLZ_CODAFN,PLZ_VALOR_HORA,PLZ_CEN_COSTO,PLZ_CODGRE,PLZ_CODESP,PLZ_ALMUERZO,PLZ_FECHA_PPTO,PLZ_FECHA_SUPRE,PLZ_PPR_N1,PLZ_PPR_N2,PLZ_PPR_N3,PLZ_PPR_N4,PLZ_PPR_N5,PLZ_PPR_N6,PLZ_PPR_N7 FROM PLA_PLZ_PLAZA WHERE (PLZ_CODCIA=:1) and (asdasdasdasd)
   
   -- personal supervisado por plaza

   SELECT ROWID,PLZ_CODCIA,PLZ_CODIGO,PLZ_NOMBRE FROM PLA_PLZ_PLAZA WHERE (PLZ_CODCIA=:1) and (fasdfasd)

    * Supervisa a
   SELECT ROWID,PSV_CODPLZ_SUPERVISA,PSV_SUPERVISOR_SUPERVISADO,PSV_CODPLZ,PSV_CODCIA FROM REC_PSV_PUESTO_SUPERVISA WHERE psv_supervisor_supervisado = 'A' and (PSV_CODPLZ=:1) and (PSV_CODCIA=:2) and (fasdfa)
    
    * supervisado por
   SELECT ROWID,PSV_CODPLZ_SUPERVISA,PSV_SUPERVISOR_SUPERVISADO,PSV_CODPLZ,PSV_CODCIA FROM REC_PSV_PUESTO_SUPERVISA WHERE psv_supervisor_supervisado = 'P' and (PSV_CODPLZ=:1) and (PSV_CODCIA=:2) and (twetrw)
   
   -- Grupos y especialidades

    * Grupo
   SELECT ROWID,GRE_CODCIA,GRE_CODIGO,GRE_DESCRIPCION FROM PLA_GRE_GRUPO_ESPECIALIDAD WHERE (fasdfa)

    * Especialidad
    SELECT ROWID,ESP_CODCIA,ESP_CODGRE,ESP_CODIGO,ESP_DESCRIPCION,ESP_CODUNI,ESP_DEFINICION FROM PLA_ESP_ESPECIALIDAD WHERE (ESP_CODCIA=:1) and (ESP_CODGRE=:2) and (fasdw)
   
   -- actualizar partidas presupuestarias

    UPDATE rhepq.pla_plz_plaza
    SET plz_ppr_n1 = pAnioNuevo
    WHERE plz_ppr_n1 = pAnioAntiguo
    AND plz_estado IN ('O', 'V');
   
   -- actualizar paso salarial en Ingresos fijos # Pendiente
   
   -- Mano de obra

   SELECT ROWID,TMO_CODCIA,TMO_CODIGO,TMO_DESCRIPCION,TMO_CTA_CONTABLE FROM PLA_TMO_TIPO_MANOOBRA WHERE (TMO_CODCIA=:1) and (fasdfa)
   
   -- Ubicaciones de Grupos de trabajo

   SELECT ROWID,UBI_CODCIA,UBI_CODIGO,UBI_DESCRIPCION FROM PLA_UBI_UBICACION WHERE (UBI_CODCIA=:1) and (fasdf)
   
   -- Areas funcionales de grupos de trabajo

   SELECT ROWID,AFN_CODCIA,AFN_CODIGO,AFN_DESCRIPCION FROM PLA_AFN_AREAFUNCIONAL WHERE (AFN_CODCIA=:1) and (fasdf)
   
   -- catalogo de grupos de trabajo

   SELECT ROWID,GRT_CODCIA,GRT_CODUBI,GRT_CODTPP,GRT_CODAFN,GRT_DESCRIPCION FROM PLA_GRT_GRUPOTRABAJO WHERE (GRT_CODCIA=:1) and (asdfaw)

   -- ##### SUBMODULO DE PROCESOS

    -- Presupuesto de Plazas

   SELECT ROWID,PLZ_ESTADO,PLZ_FECHA_PPTO,PLZ_CODCIA,PLZ_CODIGO,PLZ_NOMBRE,PLZ_CEN_COSTO,PLZ_CODTPP,PLZ_CODPUE,PLZ_CODUNI,PLZ_CODTMO,PLZ_CODUBI,PLZ_CODAFN FROM PLA_PLZ_PLAZA WHERE plz_estado in ('V', 'P') and (PLZ_CODCIA=:1) and (rweqr)   
   
   -- Reubicacion de plazas por unidad

   SP_REUBICA_PLAZAS

    -- Supresion de plazas

    SELECT ROWID,PLZ_ESTADO,PLZ_FECHA_SUPRE,PLZ_CODCIA,PLZ_CODIGO,PLZ_NOMBRE,PLZ_CEN_COSTO,PLZ_CODTPP,PLZ_CODPUE,PLZ_CODUNI,PLZ_CODTMO,PLZ_CODUBI,PLZ_CODAFN FROM PLA_PLZ_PLAZA WHERE plz_estado = 'V' and (PLZ_CODCIA=:1) and (fqwer)

    -- Supresion de puestos y plazas



   --######################## EXPEDIENTES DE PERSONAL ###########################
   
          SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'PLA_EMP_EMPLEADO' AND OWNER = 'RHEPQ';

   
   --// Tipos de Estudio
   
   SELECT TES_CODIGO,TES_DESCRIPCION,TES_DESCRIPCION_ING FROM REC_TES_TIPO_ESTUDIO WHERE (fasdf)
   
   --// Carreras
   
   SELECT ROWID,CAR_CODIGO,CAR_NOMBRE,CAR_NOMBRE_ING,CAR_NOMBRE_CORTO,CAR_INCREMENTO,CAR_CODTES,CAR_RECONOCIDA FROM REC_CAR_CARRERA WHERE (fsdfasd)
   
   Aficiones (Pendiente)
   
	--// Asociaciones
   
   SELECT ROWID,ASO_CODIGO,ASO_NOMBRE,ASO_NOMBRE_ING,ASO_NATURALEZA FROM PLA_ASO_ASOCIACION WHERE (fasdfasd)
   
   --// Tipos de Parentescos
   
   SELECT ROWID,PRT_CODIGO,PRT_NOMBRE FROM PLA_PRT_PARENTESCO WHERE (dfsdfas)
   
   --// Mantenimiento de Religiones
   
   SELECT ROWID,RLI_CODIGO,RLI_DESCRIPCION FROM PLA_RLI_RELIGION WHERE (dasfasdf)
   
   --# De aqui para arriba HECHO
	--// Empleados
   
   SELECT ROWID,EMP_CODIGO,EMP_CODIGO_ANTERIOR,EMP_PRIMER_APE,EMP_SEGUNDO_APE,EMP_APELLIDO_CAS,EMP_PRIMER_NOM,EMP_SEGUNDO_NOM,EMP_TERCER_NOM,EMP_NOMBRE_ISSS,EMP_NOMBRE_CIP,EMP_NOMBRE_NIT,EMP_DIRECCION,EMP_CODDEP,EMP_CODMUN,EMP_TELEFONO,EMP_RENGLON,EMP_CODIGO_POSTAL,EMP_FECHA_NAC,EMP_LUGAR_NAC,EMP_CODDEP_NAC,EMP_LUGAR_NAC_TEXT,EMP_NACIONALIDAD,EMP_AFP,EMP_COD_AGENTE,EMP_SUPERVISOR,EMP_FECHA_INGRESO,EMP_SEXO,EMP_ESTADO_CIVIL,EMP_TIPO_SANGRE,EMP_PROFESION,EMP_CODREN,EMP_ZONA,EMP_AREA,EMP_NO_COLEGIADO,EMP_FECHAING_REPORTE,EMP_CODUNI_UBI,EMP_FECHA_FICHADATOS,EMP_TARJETA,EMP_HORA_EXTRA,EMP_DESC_ISSS,EMP_DESC_ISSS_JUB,EMP_COLEGIADO_ACTIVO,EMP_CIP,EMP_EXPEDIDA_FECHA,EMP_DPI_FECHA_VENCE,EMP_EXPEDIDA_DEP,EMP_EXPEDIDA_MUN,EMP_DPI,EMP_COMISION,EMP_DOMICILIADO,EMP_SERV_PRESTADOS,EMP_RENTA_DOMICILIADO,EMP_RENTA_SERVICIO,EMP_ESTADO,EMP_ACUERDO_BAJA,EMP_CODUBI,EMP_CODTPP,EMP_CODAFN,EMP_ISSS,EMP_NIT,EMP_ELECTORAL,EMP_ELECTORAL_EXTENDIDO_EN,EMP_CARNET_RESIDENTE,EMP_NUP,EMP_REUBI,EMP_REUBI_ING,EMP_FECHA_RETIRO,EMP_FECHARET_REPORTE,EMP_CODMRT,EMP_INDEMNIZACION,EMP_PESO,EMP_ESTATURA,EMP_DONANTE,EMP_INTERNET,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON,EMP_TALLA_CAMISA,EMP_USA_LENTES,EMP_FUMA,EMP_BEBIDA_ALCOHOLICA,EMP_IMPEDIMENTO,EMP_SERVICIO_MILITAR,EMP_GRADO_MILITAR,EMP_CASA,EMP_CUOTA_VIVIENDA,EMP_PROM_INGRESO_FAM,EMP_COLEGIATURAS,EMP_QUIEN_CUIDA_HIJOS,EMP_TIPO_BONO_ESC,EMP_FECHA_PAGO_BONOESCOLAR,EMP_VEHI_MODELO,EMP_VEHI_ANO,EMP_PLACA,EMP_TIPO_LICENCIA,EMP_TIPFECHA_LICEN,EMP_CODRLI,EMP_CODCIA,EMP_FECHA_CREA,EMP_USUARIO_CREA,EMP_FECHA_MOD,EMP_USUARIO_MOD,EMP_CODTPU,EMP_CODPUE,EMP_CODUNI,EMP_SALARIO,EMP_TIPO_SALARIO,EMP_FECHA_DEL,EMP_FECHA_AL,EMP_ACUERDO,EMP_JORNADA_CONTRATO,EMP_TRABAJA_CONYUGE,EMP_DEVENGADO_CONYUGE,EMP_AFECTO_ACEP,EMP_DESCUENTA_FIANZA,EMP_AFECTO_MONTEPIO,EMP_FRECUECIA_PAGO,EMP_PLAN_JUBILA,EMP_CODCEL,EMP_BECA,EMP_USA_CLINICA,EMP_CTA_EMPLEADOS_CONTRA,EMP_JUNTADIR,EMP_INTERINATO FROM PLA_EMP_EMPLEADO WHERE (EMP_CODCIA=1) and (fasdfasd) order by EMP_CODCIA, EMP_CODIGO
   
   
   
   SELECT ROWID,EMP_CODIGO,EMP_CODIGO_ANTERIOR,EMP_PRIMER_APE,EMP_SEGUNDO_APE,EMP_APELLIDO_CAS,EMP_PRIMER_NOM,EMP_SEGUNDO_NOM,EMP_TERCER_NOM,EMP_NOMBRE_ISSS,EMP_NOMBRE_CIP,EMP_NOMBRE_NIT,EMP_DIRECCION,EMP_CODDEP,EMP_CODMUN,EMP_TELEFONO,EMP_RENGLON,EMP_CODIGO_POSTAL,EMP_FECHA_NAC,EMP_LUGAR_NAC,EMP_CODDEP_NAC,EMP_LUGAR_NAC_TEXT,EMP_NACIONALIDAD,EMP_AFP,EMP_COD_AGENTE,EMP_SUPERVISOR,EMP_FECHA_INGRESO,EMP_SEXO,EMP_ESTADO_CIVIL,EMP_TIPO_SANGRE,EMP_PROFESION,EMP_CODREN,EMP_ZONA,EMP_AREA,EMP_NO_COLEGIADO,EMP_FECHAING_REPORTE,EMP_CODUNI_UBI,EMP_FECHA_FICHADATOS,EMP_TARJETA,EMP_HORA_EXTRA,EMP_DESC_ISSS,EMP_DESC_ISSS_JUB,EMP_COLEGIADO_ACTIVO,EMP_CIP,EMP_EXPEDIDA_FECHA,EMP_DPI_FECHA_VENCE,EMP_EXPEDIDA_DEP,EMP_EXPEDIDA_MUN,EMP_DPI,EMP_COMISION,EMP_DOMICILIADO,EMP_SERV_PRESTADOS,EMP_RENTA_DOMICILIADO,EMP_RENTA_SERVICIO,EMP_ESTADO,EMP_ACUERDO_BAJA,EMP_CODUBI,EMP_CODTPP,EMP_CODAFN,EMP_ISSS,EMP_NIT,EMP_ELECTORAL,EMP_ELECTORAL_EXTENDIDO_EN,EMP_CARNET_RESIDENTE,EMP_NUP,EMP_REUBI,EMP_REUBI_ING,EMP_FECHA_RETIRO,EMP_FECHARET_REPORTE,EMP_CODMRT,EMP_INDEMNIZACION,EMP_PESO,EMP_ESTATURA,EMP_DONANTE,EMP_INTERNET,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON,EMP_TALLA_CAMISA,EMP_USA_LENTES,EMP_FUMA,EMP_BEBIDA_ALCOHOLICA,EMP_IMPEDIMENTO,EMP_SERVICIO_MILITAR,EMP_GRADO_MILITAR,EMP_CASA,EMP_CUOTA_VIVIENDA,EMP_PROM_INGRESO_FAM,EMP_COLEGIATURAS,EMP_QUIEN_CUIDA_HIJOS,EMP_TIPO_BONO_ESC,EMP_FECHA_PAGO_BONOESCOLAR,EMP_VEHI_MODELO,EMP_VEHI_ANO,EMP_PLACA,EMP_TIPO_LICENCIA,EMP_TIPFECHA_LICEN,EMP_CODRLI,EMP_CODCIA,EMP_FECHA_CREA,EMP_USUARIO_CREA,EMP_FECHA_MOD,EMP_USUARIO_MOD,EMP_CODTPU,EMP_CODPUE,EMP_CODUNI,EMP_SALARIO,EMP_TIPO_SALARIO,EMP_FECHA_DEL,EMP_FECHA_AL,EMP_ACUERDO,EMP_JORNADA_CONTRATO,EMP_TRABAJA_CONYUGE,EMP_DEVENGADO_CONYUGE,EMP_AFECTO_ACEP,EMP_DESCUENTA_FIANZA,EMP_AFECTO_MONTEPIO,EMP_FRECUECIA_PAGO,EMP_PLAN_JUBILA,EMP_CODCEL,EMP_BECA,EMP_USA_CLINICA,EMP_CTA_EMPLEADOS_CONTRA,EMP_JUNTADIR,EMP_INTERINATO FROM PLA_EMP_EMPLEADO WHERE (EMP_DESC_ISSS_JUB <> :1) and (EMP_CODCIA=:2) order by EMP_CODCIA, EMP_CODIGO and (fasdfasdf) order by EMP_CODCIA, EMP_CODIGO
   
                    SELECT 
                        EMP_CODIGO AS value,
                        EMP_PRIMER_APE || ' ' || 
                        NVL(EMP_SEGUNDO_APE, '') || ' ' || 
                        NVL(EMP_APELLIDO_CAS, '') || ', ' || 
                        EMP_PRIMER_NOM || ' ' || 
                        NVL(EMP_SEGUNDO_NOM, '') || ' ' || 
                        NVL(EMP_TERCER_NOM, '') AS label
                    FROM PLA_EMP_EMPLEADO
                    WHERE EMP_CODCIA = '001' AND EMP_ESTADO = 'A'
                    ORDER BY EMP_PRIMER_APE, EMP_SEGUNDO_APE, EMP_APELLIDO_CAS, EMP_PRIMER_NOM, EMP_SEGUNDO_NOM, EMP_TERCER_NOM;
                   
                   ------------------------------------------------------------------------
                   
                            SELECT COLUMN_NAME, data_type, data_length, nullable
							FROM ALL_TAB_COLUMNS 
							WHERE TABLE_NAME = 'PLA_FDE_FAMILIADEP' AND OWNER = 'RHEPQ';
                   
                   ----------------------------------------------------------------------------------
                   
                   -- ############### PANTALLA DE INGRESOS FIJOS // DATOS DE PLANILLA
                                      
                   SELECT ROWID,INF_CODCIA,INF_CODEMP,INF_CODTIG,INF_VALOR FROM PLA_INF_INGRESOS_FIJOS WHERE (INF_CODCIA=:1) and (fasdf)
                   ## COMBO BOX CON TIPO SALARIO, MENSUAL, CATORCENAL, EJECUTIVO, QUINCENAL, SEMANAL.
                   ## COMBO BOX CON FORMA PAGO ABONO A CTA. O CHEQUE.
                   ## COMBO BOX CON TIPO DE CUENTA AHORRO O MONETARIO
                   
                   SELECT ROWID,DPL_SALARIO,DPL_BONIFICACION,DPL_VIATICOS,DPL_EXTRA,DPL_TRANSPORTE,DPL_TIPO_SALARIO,DPL_TIPO_CONTRATO,DPL_FORMA_PAGO,DPL_CODICR,DPL_CUENTA_BANCO,DPL_TIPO_CUENTA,DPL_FAMILIA,DPL_ULTIMO_AUMENTO,DPL_FONDO_EMPLEADO,DPL_FONDO_PATRONO,DPL_CODPLZ,DPL_HRS_MANANA,DPL_HRS_TARDE,DPL_HRS_SABADO,DPL_CODJOR,DPL_HORAS_DIA,DPL_ACTIVO,DPL_SINDICATO_STEPQ,DPL_SINDICATO,DPL_SINDICATO_SINUND,DPL_SINDICATO_STUPEPQPZ,DPL_SINDICATO_OSTRACOMPQ,DPL_ATCONSA_CUOTA,DPL_ATCONSA_POR,DPL_CODCIA,DPL_CODEMP,DPL_TIPO_RENTA,DPL_SEGUMED,DPL_SEGUVEHI,DPL_PRIMAVEHI,DPL_INPEP,DPL_MEDICA,DPL_FONDO,DPL_USUARIO_CREA,DPL_FECHA_CREA,DPL_FECHA_MOD,DPL_USUARIO_MOD,DPL_FONDO_VAC FROM PLA_DPL_DATOSPLANILLA WHERE DPL_CODCIA = '001' AND DPL_CODEMP = 1309 and (fasdfasdf)
                   
                   SELECT * FROM PLA_DPL_DATOSPLANILLA
                   
                   
                                      
                   -- ############### PANTALLA DE FAMILIARES DEPENDIENTES // FAMILIARES DEPENDIENTES
                   
                   SELECT ROWID,FDE_SECUENCIAL,FDE_NOMBRE,FDE_FECHA_NAC,FDE_CEDULA,FDE_CODPRT,FDE_SEXO,FDE_EDO_CIVIL,FDE_TRABAJA,empdep_codigo,FDE_NIVEL_ESTUDIO,FDE_LUGAR_ESTUDIO,FDE_ESTUDIA,FDE_DEPENDE,FDE_CODCIA,FDE_CODEMP,FDE_BENEFICIARIO,FDE_INCAPACIDAD,FDE_PORC_SEGURO_VIDA,FDE_ENTREGO_INSCRIPCION,FDE_ENTREGO_CIERRE_CICLO,FDE_FECHAPAGO_BONOESCOLAR FROM PLA_FDE_FAMILIADEP WHERE FDE_CODCIA = '001' AND FDE_CODEMP = 1309 and (fasdfasdf)
                   
                   ##COMBO BOX SEXO, MASCULINO FEMENINO
                   
                   ##COMBO BOX ESTADO CIVIL, SOLTERO, CASADO, VIUDO, DIVORCIADO, UNIDO
                   
                   
                                      
                   -- ############### PANTALLA DE REFERENCIAS // REFERENCIAS
                                      
                   SELECT ROWID,REF_PERSONAL_LAB,REF_NOMBRE,REF_OCUPACION,REF_DIRECCION,REF_TELEFONO,REF_TIEMPO,REF_CODEMP,REF_CODCIA,REF_SECUENCIAL FROM PLA_REF_REFERENCIAS WHERE REF_CODCIA = '001' AND REF_CODEMP = 1252 and (REF_CODCIA='001') and (fasdfasdf)
                   
                   ##COMBO BOX TIPO REFERENCIA, PERSONAL, LABORAL, COMERCIAL.
                   
                                      
                   
                   -- ############### PANTALLA DE EMPLEOS ANTERIORES // Empleos Anteriores
                   
                   SELECT ROWID,EMA_CODICR,EMA_ULT_PUESTO_ING,EMA_TELEFONO_CIA,EMA_FAX_CIA,EMA_FECHA_ING,EMA_FECHA_RET,EMA_APLICA_BONOANTE,EMA_ULT_PUESTO,EMA_UNIDAD,EMA_JEFE_INMEDIATO,EMA_ULT_SALARIO,EMA_MOTIVO,EMA_DESEMPENO,EMA_REL_INTERPERSONAL,EMA_OBSERVACIONES,EMA_CODEMP,EMA_CODCIA FROM PLA_EMA_EMPLEOANTE WHERE EMA_CODCIA = :1 AND EMA_CODEMP = :2 and (EMA_CODCIA=:3) and (fasdfasdf) order by EMA_FECHA_ING DESC
                   
                   
                                                         
                   
                   -- ############### PANTALLA DE CAPACITACIONES // CAPACITACIONES RECIBIDAS
                   
                   SELECT ROWID,CAP_SECUENCIAL,CAP_TIPO,CAP_NOMBRE,CAP_FECHA,CAP_DURACION,CAP_COSTO,CAP_CODEMP,CAP_CODCIA FROM PLA_CAP_CAPACITACION WHERE CAP_CODCIA = :1 AND CAP_CODEMP = :2 and (CAP_CODCIA=:3) and (fsdfasdf)
                   ##COMBO BOX TIPO CAPACITACION SEMINARIO, BECA, CURSO, CONGRESO, OTROS.
                   
                   
                                      
                   
                   -- ############### PANTALLA DE OBSERVACIONES
                   
   					SELECT ROWID,OBS_CODEMP,OBS_CODCIA,OBS_SECUENCIAL,OBS_OBSERVACION FROM PLA_OBS_OBSERVACION WHERE OBS_CODCIA = '001' AND OBS_CODEMP = 1824 and (OBS_CODCIA=:3) and (fasdfasd)
   					
   					
   					   					   					   					
   					-- ############### PANTALLA DE ASOCIACIONES A LAS QUE PERTENECE EL EMPLEADO
   					
   					SELECT ROWID,ASE_CODASO,ASE_DESDE,ASE_HASTA,ASE_TIEMPO,ASE_CARGO,ASE_CARGO_ING,ASE_CODEMP,ASE_CODCIA FROM PLA_ASE_ASOCIACION_EMP WHERE ASE_CODCIA = '001' AND ASE_CODEMP = 1589 and (ASE_CODCIA=:3) and (fasdf)
   					
   					
   					
   					
   					-- ############### PANTALLA AFICIONES DE EL EMPLEADO
   					
   					SELECT ROWID,AFE_CODAFI,AFE_PRACTICA,AFE_CODEMP,AFE_CODCIA FROM PLA_AFE_AFICION_EMP WHERE AFE_CODCIA = '001' AND AFE_CODEMP = 1589 and (AFE_CODCIA=:3) and (fasf)
   					
   					##Tiene un checkbox para saber si practica o NO.
   					
   					
   					   					
   					   					
   					-- ############### PANTALLA DE EN CASO DE EMERGENCIA LLAMAR A
   					
   					SELECT ROWID,EME_SECUENCIAL,EME_NOMBRE,EME_CODPRT,EME_DIRECCION,EME_TELEFONOS,EME_TRABAJO,EME_TELEFONO_TRABAJO,EME_CODEMP,EME_CODCIA FROM PLA_EME_EMERGENCIA_EMP WHERE EME_CODCIA = :1 AND EME_CODEMP = :2 and (EME_SECUENCIAL=:3) and (EME_CODCIA=:4) and (fasdfasdf)
                   
   					
   					   					
   					
   					-- ############### PANTALLA DE HABILIDADES DEL EMPLEADO
   					
   					SELECT ROWID,HAE_CODTRQ,HAE_CODREQ,HAE_DOMINIO,HAE_TIEMPO_EXPERIENCIA,HAE_METRICO,HAE_CODEMP,HAE_CODCIA FROM REC_HAE_HABILIDAD_EMPLEADO WHERE HAE_CODCIA = :1 AND HAE_CODEMP = :2 and (fsdf)
   					
   					##COMBO BOX DOMINIO MEDIO, ALTO, BAJO
   					
   					
   					
   					-- ############### PANTALLA DE ESTUDIOS REALIZADOS POR EL EMPLEADO // EDUCACION RECIBIDAPOR EL EMPLEADO
   					
   					SELECT ROWID,EDE_CODICR,EDE_CODCAR,EDE_PERIODO_INICIAL,EDE_PERIODO_FINAL,EDE_TOTAL_MATERIAS,EDE_MATERIAS_APROBADAS,EDE_NIVEL,EDE_TITULO_OBTENIDO,EDE_SITUACION,EDE_CODTRQ,EDE_CODREQ,EDE_CODEMP,EDE_CODCIA FROM REC_EDE_EDUCACION WHERE EDE_CODCIA = :1 AND EDE_CODEMP = :2 and (EDE_CODCIA=:3) and (fsadfa) order by EDE_PERIODO_INICIAL DESC
   					##COMBO BOX SITUACION, Activo, Inactivo, Concluido
   					
   					
   					
   					-- ############### PANTALLA DE LICENCIAS DE CONDUCIR // Licencias de conducir del empleado
   					
   					SELECT ROWID,LEM_CODIGO,LEM_TIPO,LEM_NUMERO,LEM_VENCE,LEM_EXTENDIDO,LEM_CODEMP,LEM_CODCIA FROM PLA_LEM_LICENCIA_EMP WHERE (LEM_CODCIA=:1) and (fasdfas)
   					
   					
   					
   					-- ############### PANTALLA DE SEGUROS DEL EMPLEADO // seguros del empleado
   					
   					SELECT ROWID,SUE_TIPO,SUE_NO_POLIZA,SUE_CERTIFICADO,SUE_MONTO,SUE_VALOR_PRIMA,SUE_DESCUENTO_PLANILLA,SUE_CODTDC,SUE_CODEMP,SUE_CODCIA FROM PLA_SUE_SEGURO_EMPLEADO WHERE (SUE_CODCIA=:1) and (fasdf)   					
   					##COMBO BOX TIPO SEGURO,  vida colectivo, medico  hospitalario, vida contrivutivo, vida/medico hospital, otros
   					
   					
   					
   					-- ############### PANTALLA DE RECORDS DE TRABAJO DEL EMPLEADO // Records de trabajo del empleado
   					
   					SELECT ROWID,RTR_FECHA,RTR_FECHA_INI,RTR_FECHA_FIN,RTR_ACUERDO_BAJA,RTR_PUESTO,RTR_CODUNI,RTR_NOMBRE_UNI,RTR_SALARIO,RTR_CODMRT,RTR_CODCIA,RTR_CODEMP,RTR_CODIGO FROM PLA_RTR_RECORD_TRABAJO WHERE (RTR_CODCIA=:1) and (fasdfasd) order by RTR_FECHA_INI
   					
   					
   					
   					-- ############### PANTALLA DE PLAN DE CAPACITACION // Records de capacitaciones del empleado
   					
   					SELECT ROWID,PRT_EVENTO,PRT_CORRELATIVO,PRT_ESTADO,PRT_NOTA_EMPLEADO,PRT_EMPLEADO,PRT_CODCIA FROM CAP_PRT_EVENTO WHERE (PRT_CODCIA=:1) and (fsdfasd)
   					##COMBO BOX ESTADO, asistio, desistio, NO asistio.
   					
   					
   					
   					-- ############### PANTALLA DE TRASLADOS // Traslados
   					
   					SELECT ROWID,TTO_USUARIO_CREA,TTO_MAQUINA_CREA,TTO_FECHA_CREA,TTO_CODCIA,TTO_CODEMP,TTO_NO_OFICIO,TTO_FECHA_TRAS,TTO_CODUNI_DEL,TTO_CODPLZ_DEL,TTO_CODUNI_AL,TTO_CODPLZ_AL FROM PLA_TRA_TRASLADO_OFICIOS WHERE (TTO_CODCIA=:1) and (fasdfasdf)
   					
   					
   					
   					-- ############### PANTALLA DE VACUNAS // Vacunas
   					
   					SELECT ROWID,VAC_CODCIA,VAC_CODEMP,VAC_CORRELA,VAC_NODOSIS,VAC_TIPO_VACUNA,VAC_ENFEMEDAD,VAC_FECHA,VAC_USUARIO_CREA,VAC_LUGAR_INSTITUCION,VAC_MAQUINA_CREA,VAC_FECHA_CREA FROM RHEPQ.PLA_VAC_VACUNA WHERE (VAC_CODCIA=:1) and (fasdfa)
   					
   					##COMBO BOX TIPO VACUNA, MODERNA, PFIZER, ASTRAZENECA, SPUTNIK V1, JHONSON & JHONSON, SINOVAC
   					##COMBO BOX ENFERMEDAD, COVID 19
   					
   					
   					 
   					-- ############### PANTALLA DE INFORMACION ADICIONAL DEL EMPLEADO // Informacion adicional del empleado (Icono de flecha)
   					##COMBO BOX CASA, Propia, Alquilada, Con Promesa de Venta
   					##COMBO BOX TIPO BONO ESCOLAR, Primaria, Educacion Media, Universitario, Ninguno
   					##COMBO BOX TIPO LICENCIA, Tipo A, Tipo B, Tipo C, Tipo E
   					
	--// Prestadores de servicio

-- # empleado
    SELECT ROWID,EMP_CODIGO,EMP_CODIGO_ANTERIOR,EMP_PRIMER_APE,EMP_SEGUNDO_APE,EMP_APELLIDO_CAS,EMP_PRIMER_NOM,EMP_SEGUNDO_NOM,EMP_TERCER_NOM,EMP_NOMBRE_ISSS,EMP_NOMBRE_CIP,EMP_NOMBRE_NIT,EMP_DIRECCION,EMP_CODDEP,EMP_CODMUN,EMP_TELEFONO,EMP_RENGLON,EMP_CODIGO_POSTAL,EMP_FECHA_NAC,EMP_LUGAR_NAC,EMP_CODDEP_NAC,EMP_LUGAR_NAC_TEXT,EMP_NACIONALIDAD,EMP_COD_AGENTE,EMP_SUPERVISOR,EMP_FECHA_INGRESO,EMP_SEXO,EMP_ESTADO_CIVIL,EMP_TIPO_SANGRE,EMP_PROFESION,EMP_CODREN,EMP_NO_COLEGIADO,EMP_AFP,EMP_TARJETA,EMP_HORA_EXTRA,EMP_DESC_ISSS,EMP_COLEGIADO_ACTIVO,EMP_CIP,EMP_EXPEDIDA_FECHA,EMP_EXPEDIDA_DEP,EMP_EXPEDIDA_MUN,EMP_DPI,EMP_AREA,EMP_ZONA,EMP_COMISION,EMP_DOMICILIADO,EMP_SERV_PRESTADOS,EMP_RENTA_DOMICILIADO,EMP_RENTA_SERVICIO,EMP_ESTADO,EMP_ACUERDO_BAJA,EMP_CODUBI,EMP_CODTPP,EMP_CODAFN,EMP_ISSS,EMP_NIT,EMP_ELECTORAL,EMP_ELECTORAL_EXTENDIDO_EN,EMP_CARNET_RESIDENTE,EMP_NUP,EMP_REUBI,EMP_REUBI_ING,EMP_FECHA_RETIRO,EMP_FECHARET_REPORTE,EMP_CODMRT,EMP_INDEMNIZACION,EMP_PESO,EMP_ESTATURA,EMP_DONANTE,EMP_INTERNET,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON,EMP_TALLA_CAMISA,EMP_USA_LENTES,EMP_FUMA,EMP_BEBIDA_ALCOHOLICA,EMP_IMPEDIMENTO,EMP_SERVICIO_MILITAR,EMP_GRADO_MILITAR,EMP_CASA,EMP_CUOTA_VIVIENDA,EMP_PROM_INGRESO_FAM,EMP_COLEGIATURAS,EMP_QUIEN_CUIDA_HIJOS,EMP_TIPO_BONO_ESC,EMP_FECHA_PAGO_BONOESCOLAR,EMP_VEHI_MODELO,EMP_VEHI_ANO,EMP_PLACA,EMP_CODRLI,EMP_CODCIA,EMP_FECHA_CREA,EMP_USUARIO_CREA,EMP_FECHA_MOD,EMP_USUARIO_MOD,EMP_CODTPU,EMP_CODPUE,EMP_CODUNI,EMP_SALARIO,EMP_TIPO_SALARIO,EMP_FECHA_DEL,EMP_FECHA_AL,EMP_ACUERDO,EMP_JORNADA_CONTRATO,EMP_TRABAJA_CONYUGE,EMP_DEVENGADO_CONYUGE,EMP_AFECTO_ACEP,EMP_DESCUENTA_FIANZA,EMP_AFECTO_MONTEPIO,EMP_FRECUECIA_PAGO,EMP_PLAN_JUBILA,EMP_USA_CLINICA,EMP_BECA,EMP_JUNTADIR,EMP_FECHAING_REPORTE,EMP_CODCEL,EMP_CTA_EMPLEADOS_CONTRA FROM PLA_EMP_EMPLEADO WHERE Emp_codren Not In (011,022) and (EMP_CODCIA=:1) and (fadsfasdf)

-- # Familia dependiente
SELECT ROWID,FDE_SECUENCIAL,FDE_NOMBRE,FDE_FECHA_NAC,FDE_CEDULA,FDE_CODPRT,FDE_SEXO,FDE_EDO_CIVIL,FDE_TRABAJA,empdep_codigo,FDE_NIVEL_ESTUDIO,FDE_LUGAR_ESTUDIO,FDE_ESTUDIA,FDE_DEPENDE,FDE_CODCIA,FDE_CODEMP,FDE_BENEFICIARIO,FDE_INCAPACIDAD,FDE_PORC_SEGURO_VIDA,FDE_ENTREGO_INSCRIPCION,FDE_ENTREGO_CIERRE_CICLO,FDE_FECHAPAGO_BONOESCOLAR FROM PLA_FDE_FAMILIADEP WHERE FDE_CODCIA = :1 AND FDE_CODEMP = :2 and (FDE_CODCIA=:3) and (FDE_CODEMP=:4) and (fasdfa)

-- # Referencias laborales o personales

SELECT ROWID,REF_PERSONAL_LAB,REF_NOMBRE,REF_OCUPACION,REF_DIRECCION,REF_TELEFONO,REF_TIEMPO,REF_CODEMP,REF_CODCIA,REF_SECUENCIAL FROM PLA_REF_REFERENCIAS WHERE REF_CODCIA = :1 AND REF_CODEMP = :2 and (REF_CODEMP=:3) and (REF_CODCIA=:4) and (fasdfa)

-- # Empleos anteriores

SELECT ROWID,EMA_CODICR,EMA_ULT_PUESTO_ING,EMA_TELEFONO_CIA,EMA_FAX_CIA,EMA_FECHA_ING,EMA_FECHA_RET,EMA_APLICA_BONOANTE,EMA_ULT_PUESTO,EMA_UNIDAD,EMA_JEFE_INMEDIATO,EMA_ULT_SALARIO,EMA_MOTIVO,EMA_DESEMPENO,EMA_REL_INTERPERSONAL,EMA_OBSERVACIONES,EMA_CODEMP,EMA_CODCIA FROM PLA_EMA_EMPLEOANTE WHERE EMA_CODCIA = :1 AND EMA_CODEMP = :2 and (EMA_CODEMP=:3) and (EMA_CODCIA=:4) and (fasdfa) order by EMA_FECHA_ING DESC

-- # capacitaciones recibidas

SELECT ROWID,CAP_SECUENCIAL,CAP_TIPO,CAP_NOMBRE,CAP_FECHA,CAP_DURACION,CAP_COSTO,CAP_CODEMP,CAP_CODCIA FROM PLA_CAP_CAPACITACION WHERE CAP_CODCIA = :1 AND CAP_CODEMP = :2 and (CAP_CODEMP=:3) and (CAP_CODCIA=:4) and (fasdf)

-- # observaciones generales

SELECT ROWID,OBS_CODEMP,OBS_CODCIA,OBS_SECUENCIAL,OBS_OBSERVACION FROM PLA_OBS_OBSERVACION WHERE OBS_CODCIA = :1 AND OBS_CODEMP = :2 and (OBS_CODEMP=:3) and (OBS_CODCIA=:4) and (fasdfw)

-- # Asociaciones

SELECT ROWID,ASE_CODASO,ASE_DESDE,ASE_HASTA,ASE_TIEMPO,ASE_CARGO,ASE_CARGO_ING,ASE_CODEMP,ASE_CODCIA FROM PLA_ASE_ASOCIACION_EMP WHERE ASE_CODCIA = :1 AND ASE_CODEMP = :2 and (ASE_CODEMP=:3) and (ASE_CODCIA=:4) and (fasdfasdf)

-- # Aficiones

SELECT ROWID,AFE_CODAFI,AFE_PRACTICA,AFE_CODEMP,AFE_CODCIA FROM PLA_AFE_AFICION_EMP WHERE AFE_CODCIA = :1 AND AFE_CODEMP = :2 and (AFE_CODEMP=:3) and (AFE_CODCIA=:4) and (fasdfa)

-- # En caso de emergencia

SELECT ROWID,EME_SECUENCIAL,EME_NOMBRE,EME_CODPRT,EME_DIRECCION,EME_TELEFONOS,EME_TRABAJO,EME_TELEFONO_TRABAJO,EME_CODEMP,EME_CODCIA FROM PLA_EME_EMERGENCIA_EMP WHERE EME_CODCIA = :1 AND EME_CODEMP = :2 and (EME_SECUENCIAL=:3) and (EME_CODEMP=:4) and (EME_CODCIA=:5) and (gsdfgsd)

-- # Habilidades de empleado

SELECT ROWID,HAE_CODTRQ,HAE_CODREQ,HAE_DOMINIO,HAE_TIEMPO_EXPERIENCIA,HAE_METRICO,HAE_CODEMP,HAE_CODCIA FROM REC_HAE_HABILIDAD_EMPLEADO WHERE HAE_CODCIA = :1 AND HAE_CODEMP = :2 and (HAE_CODEMP=:3) and (HAE_CODCIA=:4) and (fasdfasd)

-- # Educacion / estudios realizados por el empleado

SELECT ROWID,EDE_CODICR,EDE_CODCAR,EDE_PERIODO_INICIAL,EDE_PERIODO_FINAL,EDE_TOTAL_MATERIAS,EDE_MATERIAS_APROBADAS,EDE_NIVEL,EDE_TITULO_OBTENIDO,EDE_SITUACION,EDE_CODTRQ,EDE_CODREQ,EDE_CODEMP,EDE_CODCIA FROM REC_EDE_EDUCACION WHERE EDE_CODCIA = :1 AND EDE_CODEMP = :2 and (EDE_CODEMP=:3) and (EDE_CODCIA=:4) and (fasdfwaz) order by EDE_PERIODO_INICIAL DESC

-- # Licencias de conducir

SELECT ROWID,LEM_CODIGO,LEM_TIPO,LEM_NUMERO,LEM_VENCE,LEM_EXTENDIDO,LEM_CODEMP,LEM_CODCIA FROM PLA_LEM_LICENCIA_EMP WHERE (LEM_CODEMP=:1) and (LEM_CODCIA=:2) and (fasdfas)

-- # Seguros del empleado

SELECT ROWID,SUE_TIPO,SUE_NO_POLIZA,SUE_CERTIFICADO,SUE_MONTO,SUE_VALOR_PRIMA,SUE_DESCUENTO_PLANILLA,SUE_CODTDC,SUE_CODEMP,SUE_CODCIA FROM PLA_SUE_SEGURO_EMPLEADO WHERE (SUE_CODEMP=:1) and (SUE_CODCIA=:2) and (gdfe)

-- # Record de trabajo del empleado

SELECT ROWID,RTR_FECHA,RTR_FECHA_INI,RTR_FECHA_FIN,RTR_ACUERDO_BAJA,RTR_PUESTO,RTR_CODUNI,RTR_NOMBRE_UNI,RTR_SALARIO,RTR_CODMRT,RTR_CODCIA,RTR_CODEMP,RTR_CODIGO FROM PLA_RTR_RECORD_TRABAJO WHERE (RTR_CODCIA=:1) and (RTR_CODEMP=:2) and (tqewrq) order by RTR_FECHA_INI

-- # Plan de capacitacion

SELECT ROWID,PRT_EVENTO,PRT_CORRELATIVO,PRT_ESTADO,PRT_NOTA_EMPLEADO,PRT_EMPLEADO,PRT_CODCIA FROM CAP_PRT_EVENTO WHERE (PRT_EMPLEADO=:1) and (PRT_CODCIA=:2) and (eqwerasf)

-- # Informacion adicional:

SELECT ROWID,EMP_CODIGO,EMP_CODIGO_ANTERIOR,EMP_PRIMER_APE,EMP_SEGUNDO_APE,EMP_APELLIDO_CAS,EMP_PRIMER_NOM,EMP_SEGUNDO_NOM,EMP_TERCER_NOM,EMP_NOMBRE_ISSS,EMP_NOMBRE_CIP,EMP_NOMBRE_NIT,EMP_DIRECCION,EMP_CODDEP,EMP_CODMUN,EMP_TELEFONO,EMP_RENGLON,EMP_CODIGO_POSTAL,EMP_FECHA_NAC,EMP_LUGAR_NAC,EMP_CODDEP_NAC,EMP_LUGAR_NAC_TEXT,EMP_NACIONALIDAD,EMP_COD_AGENTE,EMP_SUPERVISOR,EMP_FECHA_INGRESO,EMP_SEXO,EMP_ESTADO_CIVIL,EMP_TIPO_SANGRE,EMP_PROFESION,EMP_CODREN,EMP_NO_COLEGIADO,EMP_AFP,EMP_TARJETA,EMP_HORA_EXTRA,EMP_DESC_ISSS,EMP_COLEGIADO_ACTIVO,EMP_CIP,EMP_EXPEDIDA_FECHA,EMP_EXPEDIDA_DEP,EMP_EXPEDIDA_MUN,EMP_DPI,EMP_AREA,EMP_ZONA,EMP_COMISION,EMP_DOMICILIADO,EMP_SERV_PRESTADOS,EMP_RENTA_DOMICILIADO,EMP_RENTA_SERVICIO,EMP_ESTADO,EMP_ACUERDO_BAJA,EMP_CODUBI,EMP_CODTPP,EMP_CODAFN,EMP_ISSS,EMP_NIT,EMP_ELECTORAL,EMP_ELECTORAL_EXTENDIDO_EN,EMP_CARNET_RESIDENTE,EMP_NUP,EMP_REUBI,EMP_REUBI_ING,EMP_FECHA_RETIRO,EMP_FECHARET_REPORTE,EMP_CODMRT,EMP_INDEMNIZACION,EMP_PESO,EMP_ESTATURA,EMP_DONANTE,EMP_INTERNET,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON,EMP_TALLA_CAMISA,EMP_USA_LENTES,EMP_FUMA,EMP_BEBIDA_ALCOHOLICA,EMP_IMPEDIMENTO,EMP_SERVICIO_MILITAR,EMP_GRADO_MILITAR,EMP_CASA,EMP_CUOTA_VIVIENDA,EMP_PROM_INGRESO_FAM,EMP_COLEGIATURAS,EMP_QUIEN_CUIDA_HIJOS,EMP_TIPO_BONO_ESC,EMP_FECHA_PAGO_BONOESCOLAR,EMP_VEHI_MODELO,EMP_VEHI_ANO,EMP_PLACA,EMP_CODRLI,EMP_CODCIA,EMP_FECHA_CREA,EMP_USUARIO_CREA,EMP_FECHA_MOD,EMP_USUARIO_MOD,EMP_CODTPU,EMP_CODPUE,EMP_CODUNI,EMP_SALARIO,EMP_TIPO_SALARIO,EMP_FECHA_DEL,EMP_FECHA_AL,EMP_ACUERDO,EMP_JORNADA_CONTRATO,EMP_TRABAJA_CONYUGE,EMP_DEVENGADO_CONYUGE,EMP_AFECTO_ACEP,EMP_DESCUENTA_FIANZA,EMP_AFECTO_MONTEPIO,EMP_FRECUECIA_PAGO,EMP_PLAN_JUBILA,EMP_USA_CLINICA,EMP_BECA,EMP_JUNTADIR,EMP_FECHAING_REPORTE,EMP_CODCEL,EMP_CTA_EMPLEADOS_CONTRA FROM PLA_EMP_EMPLEADO WHERE Emp_codren Not In (011,022) and (EMP_CODCIA=:1) and (fasdfwerq)

SELECT ROWID,EMP_CODIGO,EMP_CODIGO_ANTERIOR,EMP_PRIMER_APE,EMP_SEGUNDO_APE,EMP_APELLIDO_CAS,EMP_PRIMER_NOM,EMP_SEGUNDO_NOM,EMP_TERCER_NOM,EMP_NOMBRE_ISSS,EMP_NOMBRE_CIP,EMP_NOMBRE_NIT,EMP_DIRECCION,EMP_CODDEP,EMP_CODMUN,EMP_TELEFONO,EMP_RENGLON,EMP_CODIGO_POSTAL,EMP_FECHA_NAC,EMP_LUGAR_NAC,EMP_CODDEP_NAC,EMP_LUGAR_NAC_TEXT,EMP_NACIONALIDAD,EMP_COD_AGENTE,EMP_SUPERVISOR,EMP_FECHA_INGRESO,EMP_SEXO,EMP_ESTADO_CIVIL,EMP_TIPO_SANGRE,EMP_PROFESION,EMP_CODREN,EMP_NO_COLEGIADO,EMP_AFP,EMP_TARJETA,EMP_HORA_EXTRA,EMP_DESC_ISSS,EMP_COLEGIADO_ACTIVO,EMP_CIP,EMP_EXPEDIDA_FECHA,EMP_EXPEDIDA_DEP,EMP_EXPEDIDA_MUN,EMP_DPI,EMP_AREA,EMP_ZONA,EMP_COMISION,EMP_DOMICILIADO,EMP_SERV_PRESTADOS,EMP_RENTA_DOMICILIADO,EMP_RENTA_SERVICIO,EMP_ESTADO,EMP_ACUERDO_BAJA,EMP_CODUBI,EMP_CODTPP,EMP_CODAFN,EMP_ISSS,EMP_NIT,EMP_ELECTORAL,EMP_ELECTORAL_EXTENDIDO_EN,EMP_CARNET_RESIDENTE,EMP_NUP,EMP_REUBI,EMP_REUBI_ING,EMP_FECHA_RETIRO,EMP_FECHARET_REPORTE,EMP_CODMRT,EMP_INDEMNIZACION,EMP_PESO,EMP_ESTATURA,EMP_DONANTE,EMP_INTERNET,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON,EMP_TALLA_CAMISA,EMP_USA_LENTES,EMP_FUMA,EMP_BEBIDA_ALCOHOLICA,EMP_IMPEDIMENTO,EMP_SERVICIO_MILITAR,EMP_GRADO_MILITAR,EMP_CASA,EMP_CUOTA_VIVIENDA,EMP_PROM_INGRESO_FAM,EMP_COLEGIATURAS,EMP_QUIEN_CUIDA_HIJOS,EMP_TIPO_BONO_ESC,EMP_FECHA_PAGO_BONOESCOLAR,EMP_VEHI_MODELO,EMP_VEHI_ANO,EMP_PLACA,EMP_CODRLI,EMP_CODCIA,EMP_FECHA_CREA,EMP_USUARIO_CREA,EMP_FECHA_MOD,EMP_USUARIO_MOD,EMP_CODTPU,EMP_CODPUE,EMP_CODUNI,EMP_SALARIO,EMP_TIPO_SALARIO,EMP_FECHA_DEL,EMP_FECHA_AL,EMP_ACUERDO,EMP_JORNADA_CONTRATO,EMP_TRABAJA_CONYUGE,EMP_DEVENGADO_CONYUGE,EMP_AFECTO_ACEP,EMP_DESCUENTA_FIANZA,EMP_AFECTO_MONTEPIO,EMP_FRECUECIA_PAGO,EMP_PLAN_JUBILA,EMP_USA_CLINICA,EMP_BECA,EMP_JUNTADIR,EMP_FECHAING_REPORTE,EMP_CODCEL,EMP_CTA_EMPLEADOS_CONTRA FROM PLA_EMP_EMPLEADO WHERE Emp_codren Not In (011,022) and (EMP_CODCIA=:1) and (fasdfwerq)


	--// Recontratacion de empleados

    SELECT ROWID,EMP_CODCIA,EMP_CODIGO,EMP_NOMBRE_CIP,EMP_FECHA_INGRESO,EMP_ESTADO FROM PLA_EMP_EMPLEADO WHERE Emp_estado = 'R' and (qwerf)
   
   --# De aqui para abajo HECHO
   
   SELECT ROWID,EMP_CODCIA,EMP_CODIGO,EMP_NOMBRE_CIP,EMP_FECHA_INGRESO,EMP_ESTADO FROM PLA_EMP_EMPLEADO WHERE Emp_estado = 'R' and (fasdfasdf)
   
   SELECT 
    EMP_CODCIA,
    EMP_CODIGO,
    EMP_NOMBRE_CIP,
    EMP_FECHA_INGRESO,
    EMP_ESTADO
FROM PLA_EMP_EMPLEADO
WHERE EMP_ESTADO = 'R'                    
ORDER BY EMP_FECHA_INGRESO, EMP_CODIGO;
   
   --// Registro de acuerdos 022
   
   SELECT ROWID,CON_CODEMP,CON_CONTRATO,CON_CONTRATO_MOD,CON_ACUERDO,CON_PPR1,CON_PPR2,CON_PPR3,CON_PPR4,CON_PPR5,CON_PPR6,CON_PPR7,CON_PPR8,CON_CODCIA,CON_USUARIO_CREA,CON_FECHA_CREA,CON_MAQUINA_CREA FROM pla_con_contrato WHERE (fasdfasdf) order by Con_Codemp, Con_PPr1

   SELECT ROWID,CON_CODEMP,CON_CONTRATO,CON_CONTRATO_MOD,CON_ACUERDO,CON_PPR1,CON_PPR2,CON_PPR3,CON_PPR4,CON_PPR5,CON_PPR6,CON_PPR7,CON_PPR8,CON_CODCIA,CON_USUARIO_CREA,CON_FECHA_CREA,CON_MAQUINA_CREA FROM pla_con_contrato WHERE (fasdfas) order by Con_Codemp, Con_PPr1
   
Begin
	
	Select Emp_Nombre_Cip
	  Into :Pla_Con_Contrato.Nomemp
	  From Pla_Emp_Empleado
	 Where Emp_codigo = :Pla_Con_Contrato.Con_Codemp;

End;	


:Pla_Con_Contrato.Con_Reglon := '022';
:Pla_Con_Contrato.Con_509   := '0509';

   --// Otras Unidades
   
   SELECT ROWID,FIS_CODCIA,FIS_USUARIO_CREA,FIS_MAQUINA_CREA,FIS_CODUNI,FIS_UNI_NOMBRE,FIS_FECHA_CREA FROM RHEPQ.PLA_FISICA_UNIDADES WHERE (gsdfgsdf) order by FIS_CODUNI
   
   --// Boleto de Ornato
   
   SELECT ROWID,BOO_CODCIA,BOO_CODIGO,BOO_DESDE,BOO_HASTA,BOO_ARBITRIO,BOO_TIPO FROM RHEPQ.PLA_BOO_BOLETO_ORNATO WHERE (fasdfasd)
   
   --// Boleto de Ornato por Empleados
   
   SELECT ROWID,BOE_CODCIA,BOE_CODEMP,BOE_ANIO,BOE_ARBITRIO,BOE_BOLNUM,BOE_APLICA FROM RHEPQ.PLA_BOE_BORNATO_EMP WHERE BOE_ANIO = TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) order by BOE_CODEMP DESC and (fasdfas) order by BOE_CODEMP DESC
   
   --// Ley de Probidad de empleados
   
   SELECT ROWID,PRO_CODCIA,PRO_CODEMP,PRO_NUMERO,PRO_FECHA_PRIMERA_DECLARACION,PRO_FECHA_ENTREGA_CARGO,PRO_FECHA_ENTREGA_COLEGIO,PRO_OBSERVACIONES,PRO_FECHA_INGRESO,PRO_USUARIO_INGRESO FROM PLA_EMP_PROBIDAD WHERE (PRO_CODCIA=:1) and (fasdfasd)
   
   -- SELECT TIPO (1, 2, 3, 4)
   
   SELECT ROWID,PROD_CODCIA,PROD_CODEMP,PROD_NUMERO,PROD_TIPO_DECLARACION,PROD_CORRELATIVO,PROD_FECHA_DOCUMENTO,PROD_OBSERVACIONES,PROD_FECHA_INGRESO,PROD_USUARIO_INGRESO FROM RHEPQ.PLA_EMP_PROBIDAD_DET WHERE (PROD_CODCIA=1) and (PROD_CODEMP=419) and (PROD_NUMERO='050020107E') and (fasdfasd)
   
   --// Uniformes empleados EPQ -- si se utiliza

   SELECT ROWID,EMP_CODCIA,EMP_CODIGO,EMP_SEXO,EMP_NOMBRE_CIP,EMP_CODREN,EMP_TALLA_CAMISA,EMP_NUP,EMP_TALLA_ZAPATOS,EMP_TALLA_PANTALON FROM pla_emp_empleado WHERE (fasdfw) order by emp_codigo
   
   --// Marcas de reloj -- si se utiliza
   
   --// Control de cafeteria -- no se utiliza
   
   --// Control de reloj -- no se utiliza
   
   
-------------------------- #### MODULO PERSONAL AJENO ----------------------------------

--- ############ SUBMODULO DE CATALOGOS

    --// Tipos de gafetes

    RHEPQ.CIP_TIPO_GAFETE

    --// Areas de Acceso

    RHEPQ.CIP_AREAS

    --// Tipos de Empresa

    RHEPQ.CIP_TIPO_EMPRESA

    --// Estatus

    RHEPQ.CIP_ESTATUS

    --// Tipos de Puestos

    RHEPQ.CIP_PUESTO

    --// Empresas

    RHEPQ.CIP_EMPRESAS

    --// Persona que Autoriza

    SELECT ROWID,CIP_PER_AUTORIZA_CODIGO,CIP_PER_AUTORIZA_PUESTO,CIP_PER_AUTORIZA_OBSERVACIONES,CIP_PER_AUTORIZA_FE_INGRESO,CIP_PER_AUTORIZA_USUARIO,CIP_PER_AUTORIZA_FIRMA FROM CIP_PERSONA_AUTORIZA WHERE (fwerqfda)
    
    --// Personas

    SELECT ROWID,CIP_PERSONA_CODIGO,CIP_PERSONA_NOMBRE,CIP_PERSONA_PRIMERNOMBRE,CIP_PERSONA_NOMBRE2,CIP_PERSONA_NOMBRE3,CIP_PERSONA_APELLIDO1,CIP_PERSONA_APELLIDO2,CIP_PERSONA_APELLIDOCAS,CIP_PERSONA_NO_CEDULA,CIP_DPI,CIP_PERSONA_TIPO_SANGRE,CIP_PERSONA_DIRECCION,CIP_PERSONA_COD_ESTATUS,CIP_PERSONA_OBSERVACIONES,CIP_PERSONA_AFILIADO_IGSS,CIP_PERSONA_ALERGICO_ATI,CIP_PERSONA_ALERGICO_DES,CIP_PERSONA_FE_INGRESO,CIP_PERSONA_USUARIO,CIP_PERSONA_FOTO FROM CIP_PERSONAS WHERE (frqweasdf)

--- ############ SUBMODULO DE MANTENIMIENTOS

    --// Datos Gafetes

    --// Detalle de Personas

    --// Autorizaciones

    --// Marbetes

    --// Ingreso de Vehiculos

    --// Impresion Gafetes

-------------------------- #### MODULO DE ADMINISTRACION DE SALARIOS ----------------------------------

--- ############ SUBMODULO DE MANTENIMIENTOS


SELECT ROWID,TDC_CODCIA,TDC_CODIGO,TDC_DESCRIPCION,TDC_CTA_CONTABLE,TDC_CTA_CONTABLE2,TDC_CTA_CONTABLE3,TDC_CTA_PPTO1,TDC_PRIORIDAD,TDC_PRIORIDAD_REPORTE,TDC_NOMBRECORTO,TDC_AFP,TDC_RENTA,TDC_SALARIO_PROM FROM PLA_TDC_TIPO_DESCUENTO WHERE (TDC_CODCIA=:1) and (fasdfas)
 
   --// Tablas ISR

   SELECT ROWID,ISR_TIPO,ISR_DESDE,ISR_HASTA,ISR_VALOR,ISR_PCT,ISR_EXCEDENTE FROM PLA_ISR_ISR WHERE (fasdfa) order by isr_desde
    # select Mensual, Catorcenal, QUINCENAL

    --// Tablas Seguro Social

    SELECT ROWID,PSS_TIPO,PSS_DESDE,PSS_HASTA,PSS_VALOR,PSS_PCT,PSS_EXCEDENTE,PSS_VALOR_P,PSS_PCT_P,PSS_EXCEDENTE_P FROM PLA_PSS_ISSS WHERE (fasdf) order by pss_tipo, pss_desde
    # select Mensual, Catorcenal, QUINCENAL

    --// Tablas Montepio

    SELECT ROWID,MON_VALOR_DEL,MON_VALOR_AL,MON_PORCENTAJE,MON_CODCIA FROM pla_mon_montepio WHERE (MON_CODCIA=:1) and (fasdfaasdfasdf)

    --// Tabla descuentos AFP
    SELECT ROWID,AFP_CODIGO,AFP_EMPLEADO,AFP_PATRONO,AFP_COMISION FROM PLA_AFP_AFPS WHERE (fasdfw)

    --// Jornadas de Trabajo
    SELECT ROWID,JOR_CODCIA,JOR_CODIGO,JOR_DESCRIPCION,JOR_ALMUERZO,JOR_HORA_DEL,JOR_HORA_AL,JOR_HORAS,JOR_HORA_DEL_S,JOR_HORA_AL_S,JOR_HORAS_S,JOR_NUMHORA_ANTERIOR,JOR_NUMHORA_POSTERIOR FROM PLA_JOR_JORNADA WHERE (JOR_CODCIA=:1) and (fasdfw)
    SELECT ROWID,DET_CODCIA,DET_TURNO,DET_CODJOR,DET_DESCRIPCION_TURNO,DET_HORA_DEL,DET_HORA_AL,DET_HORA_DEL_SIMPLE,DET_HORA_AL_SIMPLE,DET_TIPO_HEXTRA_SIMPLE,DET_HORA_DEL_DOBLE,DET_HORA_AL_DOBLE,DET_TIPO_HEXTRA_DOBLE FROM PLA_DET_JORNADA WHERE (DET_CODCIA=:1) and (DET_CODJOR=:2) and (fasdfas)
    
    --// Tipos de descuentos
    SELECT ROWID,TDC_CODCIA,TDC_CODIGO,TDC_DESCRIPCION,TDC_CTA_CONTABLE,TDC_CTA_CONTABLE2,TDC_CTA_CONTABLE3,TDC_CTA_PPTO1,TDC_PRIORIDAD,TDC_PRIORIDAD_REPORTE,TDC_NOMBRECORTO,TDC_AFP,TDC_RENTA,TDC_SALARIO_PROM FROM PLA_TDC_TIPO_DESCUENTO WHERE (TDC_CODCIA=:1) and (dfaw)
    # select deduce renta No
    # select afecta renta anual No
    # select salario promedio No

    --// Tipos de Ingresos
    SELECT ROWID,TIG_CODCIA,TIG_CODIGO,TIG_DESCRIPCION,TIG_NOMBRECORTO,TIG_CTA_CONTABLE,TIG_CONTABLE_CAT,TIG_CTA_CONTABLE2,TIG_CONTABLE_CAT2,TIG_CTA_PPTO1,TIG_CTA_PPTO2,TIG_RENTA,TIG_ISSS,TIG_AFP,TIG_SALARIO_PROM,TIG_ATCONSA,TIG_FONDO_VAC,TIG_DEVENGADO FROM PLA_TIG_TIPO_INGRESO WHERE (TIG_CODCIA=:1) and (fasdfw)

    --// Movimientos
    SELECT ROWID,MOV_CODCIA,MOV_CODIGO,MOV_TIPO,MOV_ACCION,MOV_DESCRIP FROM PLA_MOV_MOVIMIENTO WHERE (MOV_CODCIA=:1) and (fweqewf)
    # select tipo movimiento Ingreso, descuento

    --// Tipos de Horas Extras
    SELECT ROWID,THE_CODCIA,THE_CODIGO,THE_TIPO_DIA,THE_HORA_INICIAL,THE_HORA_FINAL,THE_NOMBRE,THE_CODTIG,THE_COEFICIENTE,THE_VALOR_EXTRA,THE_NOCTURNIDAD FROM PLA_THE_TIPOHORAEX WHERE (THE_CODCIA=:1) and (fweqtgad)
    # select tipo dia: Habil, Sabado, Domingo, Asueto, Otros

    --// Tipos de Tiempo
    SELECT ROWID,TNT_CODCIA,TNT_CODIGO,TNT_DESCRIPCION,TNT_GOCE_SUELDO,TNT_CODTDC,TNT_PCT_DESCUENTO,TNT_DIAS_LEY FROM PLA_TNT_TPO_TIEMPO WHERE (TNT_CODCIA=:1) and (asdfwe) order by TNT_CODIGO
    # select Con / Sin Goce de Sueldo: Sin Goce, con goce

    --// Tipos de Prestamos
    SELECT ROWID,TPR_CODCIA,TPR_CODIGO,TPR_DESCRIPCION,TPR_CODTDC FROM PLA_TPR_TIPO_PRESTAMO WHERE (TPR_CODCIA=:1) and (awqad)
    # selector tipo descuento TDC PLA_TDC_TIPO_DESCUENTO
    
    --// Intereses para Prestamos
    SELECT ROWID,IPR_CODCIA,IPR_PLAZO_INI,IPR_PLAZO_FIN,IPR_INTERES FROM PLA_IPR_INTERES_PRESTAMOS WHERE (IPR_CODCIA=:1) and (weqrgqw)


------------------------------------------------------------------------ FIN DE #### MODULO DE ADMINISTRACION DE SALARIOS
   
SELECT * FROM RHEPQ.REC_HAE_HABILIDAD_EMPLEADO ORDER BY EME_SECUENCIAL ASC

preparacion de nominas
    descuentos ciclicos
    consulta de cuotas descuentos ciclicos

generacion de nominas
    autorizacion de horas EXTRA
    autorizacion global de horas EXTRAS

    Otros Ingresos
    Otros descuentos

    Retenciones de ISR x Empleado
    Descuentos judiciales x empleado
    Codigos de observacion

    Generacion de nominas
    Personal Del Renglon 022 / Generacion de nomina

-- LLAVE PRIMARIA

SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND ac.table_name = 'REC_HAE_HABILIDAD_EMPLEADO'
  AND ac.owner = 'RHEPQ';

 
 
-- SP
 
SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'SP_REC_HAE_HABILIDAD_EMP' 
  AND OWNER = 'RHEPQ';

 
 
 -- LLAVES EXTENERAS DE UNA LLAVE PRIMARIA
 SELECT afc.table_name, afc.column_name
FROM all_constraints ac
JOIN all_cons_columns afc ON ac.constraint_name = afc.constraint_name
WHERE ac.r_constraint_name = 'PLA_EMP_PK'
  AND ac.constraint_type = 'R'
  AND ac.owner = 'RHEPQ';



-- SIN DATOS DE PLANILLA.

SELECT 
    E.EMP_CODIGO
FROM 
    PLA_EMP_EMPLEADO E
LEFT JOIN 
    PLA_DPL_DATOSPLANILLA DP ON E.EMP_CODIGO = DP.DPL_CODEMP
WHERE 
    DP.DPL_CODEMP IS NULL;


 
 -- saber table de llave externa:
SELECT ACC.TABLE_NAME 
FROM ALL_CONS_COLUMNS ACC
JOIN ALL_CONSTRAINTS AC ON ACC.OWNER = AC.R_OWNER
                        AND ACC.CONSTRAINT_NAME = AC.R_CONSTRAINT_NAME
WHERE AC.CONSTRAINT_NAME = 'PLA_AFE_PLA_AFI_FK1'
  AND AC.OWNER = 'RHEPQ';


-- SABER CAMPOS QUE CONTENGAN ALGUNA LETRA.

            SELECT COLUMN_NAME 
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'PLA_EMP_EMPLEADO' 
  AND COLUMN_NAME LIKE '%COD%'
  AND OWNER = 'RHEPQ';

-------------------------- ################## NOTAS ################# ----------------------------------------

 
 SELECT 
e.EMP_PRIMER_NOM || ' ' || 
			    NVL(e.EMP_SEGUNDO_NOM, '') || ' ' || 
			    NVL(e.EMP_TERCER_NOM, '') || '' || 
			    e.EMP_PRIMER_APE || ' ' || 
			    NVL(e.EMP_SEGUNDO_APE, '') || ' ' || 
			    NVL(e.EMP_APELLIDO_CAS, '') AS nombreCompleto,
E.EMP_CODREN,
E.EMP_CODUNI,
U.UNI_NOMBRE AS UNIDAD,
E.EMP_CODGER_FUN,
E.EMP_CODUNI_FUN,
E.EMP_CODIGO_CAR,
E.EMP_CODUNI_UBI,
E.EMP_CODCIA,
E.EMP_CODIGO,
E.EMP_CODDEP,
E.EMP_CODMUN,
E.EMP_CODMRT,
E.EMP_CODPAI,
E.EMP_CODUBI,
E.EMP_CODTPP,
E.EMP_CODAFN,
E.EMP_CODCEL,
E.EMP_CODIGO_POSTAL,
E.EMP_CODDEP_NAC,
E.EMP_CODRLI,
E.EMP_CODIGO_ANTERIOR,
E.EMP_CODTPU,
E.EMP_CODPUE,
E.EMP_COD_AGENTE 
FROM RHEPQ.PLA_EMP_EMPLEADO E
LEFT JOIN RHEPQ.PLA_UNI_UNIDAD U ON U.UNI_CODIGO = E.EMP_CODUNI
WHERE E.EMP_CODIGO = 4

SELECT 
    e.EMP_PRIMER_NOM || ' ' || 
    NVL(e.EMP_SEGUNDO_NOM, '') || ' ' || 
    NVL(e.EMP_TERCER_NOM, '') || '' || 
    e.EMP_PRIMER_APE || ' ' || 
    NVL(e.EMP_SEGUNDO_APE, '') || ' ' || 
    NVL(e.EMP_APELLIDO_CAS, '') AS nombreCompleto,
    E.EMP_CODREN,
    E.EMP_CODUNI,
    E.EMP_CODGER_FUN,
    E.EMP_CODUNI_FUN,
    E.EMP_CODIGO_CAR,
    E.EMP_CODUNI_UBI,
    E.EMP_CODCIA,
    E.EMP_CODIGO,
    E.EMP_CODDEP,
    E.EMP_CODMUN,
    E.EMP_CODMRT,
    E.EMP_CODPAI,
    E.EMP_CODUBI,
    E.EMP_CODTPP,
    E.EMP_CODAFN,
    E.EMP_CODCEL,
    E.EMP_CODIGO_POSTAL,
    E.EMP_CODDEP_NAC,
    E.EMP_CODRLI,
    E.EMP_CODIGO_ANTERIOR,
    E.EMP_CODTPU,
    E.EMP_CODPUE,
    E.EMP_COD_AGENTE,
    Rhepq.area_ubicacion(E.EMP_CODUNI_UBI) AS areaUbicacion
FROM RHEPQ.PLA_EMP_EMPLEADO E
WHERE E.EMP_CODREN = 11 
  AND E.EMP_ESTADO = 'A'
  AND Rhepq.area_ubicacion(E.EMP_CODUNI_UBI) LIKE '%INFORMATICA%' AND E.EMP_SEGUNDO_NOM LIKE '%HER%';

CREAR FOTOGRAFIA:
/*declare
  bmp_image_dir varchar2(100) := '..\IMAGENES\';
  foto_filename varchar2(100);
begin
  :system.message_level := '25';
    foto_filename := bmp_image_dir||substr(to_char(:b1.emp_codigo,'00000'),2,5)||'.bmp';
    READ_IMAGE_FILE(foto_filename, 'JPG', 'EMP.EMF_FOTO');
    if not form_success then
      bell;
      Message('Este Empleado No Tiene Foto Asociada');
    end if;
  :system.message_level := '0';
end; */

/* LEE EL ARCHIVO QUE TIENE LA FOTO DEL EMPLEADO SIN NINGUN FORMATO DE MASCARA */

declare 
   --bmp_image_dir varchar2(100) := '..\Imagenes\';
   bmp_image_dir varchar2(100) := 'M:\RRHHCOMPRAS6i\Formas_Reportes6i\Imagenes\Empleados E.P.Q\';
   --   'M:\RRHHCompras\rrhh\RRHH6\Imagenes\';
   foto_filename varchar2(100);
begin
    :system.message_level := '25';
    foto_filename := bmp_image_dir||to_char(:b1.emp_codigo)||'.bmp';
    READ_IMAGE_FILE(foto_filename, 'BMP', 'EMP.EMF_FOTO');
    if not form_success then
      bell;
      Message('Este Empleado No Tiene Foto Asociada');
    end if;
    :system.message_level := '0';
end;


@puertoquetal.gob.gt

-- brindar listado con los nombres y id de los combobox

-- agregar fotografias del empleado



























   -- TABLA
          SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'REC_FRE_FRECUENCIA' AND OWNER = 'RHEPQ';


-- LLAVE PRIMARIA

SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND ac.table_name = 'PLA_TRA_TRASLADO_OFICIOS'
  AND ac.owner = 'RHEPQ';

 

 
 
 -- LLAVES EXTENERAS DE UNA LLAVE PRIMARIA
 SELECT afc.table_name, afc.column_name
FROM all_constraints ac
JOIN all_cons_columns afc ON ac.constraint_name = afc.constraint_name
WHERE ac.r_constraint_name = 'PLA_EMP_PK'
  AND ac.constraint_type = 'R'
  AND ac.owner = 'RHEPQ';



-- SIN DATOS DE PLANILLA.

SELECT 
    E.EMP_CODIGO
FROM 
    PLA_EMP_EMPLEADO E
LEFT JOIN 
    PLA_DPL_DATOSPLANILLA DP ON E.EMP_CODIGO = DP.DPL_CODEMP
WHERE 
    DP.DPL_CODEMP IS NULL;


 
 -- saber table de llave externa:
SELECT ACC.TABLE_NAME 
FROM ALL_CONS_COLUMNS ACC
JOIN ALL_CONSTRAINTS AC ON ACC.OWNER = AC.R_OWNER
                        AND ACC.CONSTRAINT_NAME = AC.R_CONSTRAINT_NAME
WHERE AC.CONSTRAINT_NAME = 'PLA_EMP_PLA_GRT_FK1'
  AND AC.OWNER = 'RHEPQ';
  


PLA_EMP_EMPLEADO

                    
SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'PLA_EMF_EMPFOTO' AND OWNER = 'RHEPQ';


-- SP
 
SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'SP_REC_EXC_EXIGENCIA_CARGO' 
  AND OWNER = 'RHEPQ';

 ALTER TABLE RHEPQ.REC_FRE_FRECUENCIA
MODIFY FRE_CODIGO VARCHAR2(3);

 
              SELECT 
                        EXC_CODCIA,
                        EXC_CODIGO,
                        EXC_DESCRIPCION,
                        EXC_TIPO
                    FROM REC_EXC_EXIGENCIA_CARGO 
                    WHERE EXC_CODCIA = pExcCodcia
                    ORDER BY EXC_CODIGO













                     
 -- LLAVES EXTENERAS DE UNA LLAVE PRIMARIA
 SELECT afc.table_name, afc.column_name
FROM all_constraints ac
JOIN all_cons_columns afc ON ac.constraint_name = afc.constraint_name
WHERE ac.r_constraint_name = 'PLA_EMP_PK'
  AND ac.constraint_type = 'R'
  AND ac.owner = 'RHEPQ';



-- SIN DATOS DE PLANILLA.

SELECT 
    E.EMP_CODIGO
FROM 
    PLA_EMP_EMPLEADO E
LEFT JOIN 
    PLA_DPL_DATOSPLANILLA DP ON E.EMP_CODIGO = DP.DPL_CODEMP
WHERE 
    DP.DPL_CODEMP IS NULL;


 

  


PLA_EMP_EMPLEADO

                    
SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'PLA_EMF_EMPFOTO' AND OWNER = 'RHEPQ';


 ALTER TABLE RHEPQ.REC_FRE_FRECUENCIA
MODIFY FRE_CODIGO VARCHAR2(3);


 -- saber table de llave externa:
SELECT ACC.TABLE_NAME 
FROM ALL_CONS_COLUMNS ACC
JOIN ALL_CONSTRAINTS AC ON ACC.OWNER = AC.R_OWNER
                        AND ACC.CONSTRAINT_NAME = AC.R_CONSTRAINT_NAME
WHERE AC.CONSTRAINT_NAME = 'PLA_PUE_PLA_TPP_FK1'
  AND AC.OWNER = 'RHEPQ';


-- SP
 
SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'SP_PLA_PUE_PUESTO' 
  AND OWNER = 'RHEPQ';


-- LLAVE PRIMARIA

SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND ac.table_name = 'PLA_PUE_PUESTO'
  AND ac.owner = 'RHEPQ';
 
 
    -- TABLA                                                                                  
          SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'PLA_PUE_PUESTO' AND OWNER = 'RHEPQ';

 SELECT table_name
FROM all_tables
WHERE UPPER(table_name) LIKE '%EMP%';

SELECT 
    P.ROWID AS id,
    P.PUE_CODCIA,
    P.PUE_CODTPP,
    TP.TPP_DESCRIPCION,
    P.PUE_CODIGO,
    P.PUE_NOMBRE,
    P.PUE_NOMBRE_ING,
    P.PUE_DESCRIPCION,
    P.PUE_ESTADO,
    P.PUE_FECHA_SUPRE,
    P.PUE_CODCSS,
    CS.CSS_DESCRIPCION,
    P.PUE_EDAD_MIN,
    P.PUE_EDAD_MAX,
    P.PUE_EST_CIVIL,
    P.PUE_SEXO,
    P.PUE_CEN_COSTO,
    P.PUE_BONO,
    P.PUE_RECARGO,
    P.PUE_CODCPU,
    CPU.CPU_DESCRIPCION,
    P.PUE_BONO_VOLUMEN,
    P.PUE_ING_BONO_VOLUMEN,
    P.PUE_BONO_MARCA,
    P.PUE_ING_BONO_MARCA,
    P.PUE_PREMIO_VOLUMEN,
    P.PUE_ING_PREMIO_VOLUMEN,
    P.PUE_PREMIO_MARCA,
    P.PUE_ING_PREMIO_MARCA,
    P.PUE_COMISION,
    P.PUE_ING_COMISION,
    P.PUE_INCENTIVOS,
    P.PUE_ING_INCENTIVOS,
    P.PUE_CODCVA,
    C.CVA_DESCRIPCION,
    P.PUE_PUNTAJE_VALUACION,
    P.PUE_REQUIERE_EVALUACION,
    P.PUE_CODUNI_GER,
    GER.GER_NOMBRE,
    P.PUE_CODUNI_SG
FROM 
    RHEPQ.PLA_PUE_PUESTO P
    INNER JOIN RHEPQ.PLA_CVA_CLASIF_VALUACION C ON C.CVA_CODIGO = P.PUE_CODCVA
    INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TP ON TP.TPP_CODIGO = P.PUE_CODTPP 
    LEFT JOIN RHEPQ.PLA_CSS_CLASALARIAL CS ON CS.CSS_CODIGO = P.PUE_CODCSS
    LEFT JOIN RHEPQ.PLA_CPU_CTA_PUESTO CPU ON CPU.CPU_CODIGO = P.PUE_CODCPU
	LEFT JOIN RHEPQ.PLA_GER_GERENCIA GER ON GER.GER_CODIGO = P.PUE_CODUNI_GER
    


SELECT * FROM RHEPQ.PLA_CVA_CLASIF_VALUACION
SELECT * FROM RHEPQ.PLA_TPP_TIPUESTO
SELECT * FROM RHEPQ.PLA_CSS_CLASALARIAL
SELECT * FROM RHEPQ.PLA_CPU_CTA_PUESTO
SELECT * FROM RHEPQ.PLA_GER_GERENCIA

SELECT 
    TABLE_NAME
FROM 
    ALL_TABLES
WHERE 
    OWNER = 'RHEPQ'
    AND TABLE_NAME LIKE '%CVA%';

   
   SELECT * FROM RHEPQ.SUB


 

 -- PARA LONGITU DE VARCHAR

 SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    CASE 
        WHEN CHAR_USED = 'C' THEN CHAR_LENGTH 
        ELSE DATA_LENGTH 
    END AS MAX_CHAR_LENGTH
FROM 
    ALL_TAB_COLUMNS
WHERE 
    TABLE_NAME = 'PLA_CCO_CEN_COSTO'
    AND OWNER = 'RHEPQ'
    AND DATA_TYPE IN ('VARCHAR2', 'CHAR');

    -- PARA LONGITUD DE NUMEROS:

     
SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    DATA_PRECISION, 
    DATA_SCALE
FROM 
    ALL_TAB_COLUMNS
WHERE 
    TABLE_NAME = 'PLA_CCO_CEN_COSTO'
    AND OWNER = 'RHEPQ'
    AND DATA_TYPE = 'NUMBER';
 
 -- tabla de usuarios

 select * from epqop.security_groupings where user_name = 'juanp1415' ;

 SELECT * from epqop.security_groupings
 
 
 -- LOGIN CON TABLAS EXTRAS

  SELECT 
	U.ID AS idUsuario,
	U.USERNAME,
	UR.PASSWORD,
	LCU.USU_ESTADO AS ESTADO,
	U.SESSIONTIME,
	R.ID AS idRol,
	R.NOMBRE AS nombreRol,
	R.CODIGO AS codRol,
	RHEPQ.obtenerRoles(u.id) as roles,
	U.emp_codcia AS cia,
	E.EMP_CODIGO AS cod,
	E.EMP_PRIMER_NOM || ' ' || 
	NVL(E.EMP_SEGUNDO_NOM, '') || ' ' || 
	NVL(E.EMP_TERCER_NOM, '') || '' || 
	E.EMP_PRIMER_APE || ' ' || 
	NVL(E.EMP_SEGUNDO_APE, '') || ' ' || 
	NVL(E.EMP_APELLIDO_CAS, '') AS nombreCompleto,
	    E.EMP_CODUNI_UBI AS codUniUbic,
	    Rhepq.area_ubicacion(E.EMP_CODUNI_UBI) AS areaUbicacion,
	S.NOMBRE AS sistema
FROM RHEPQ.ADMUSUARIO U
INNER JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = U.USERNAME
LEFT JOIN EPQOP.USERS_CONTROLSPWD PWD ON PWD.NAME = UR.USUARIO
LEFT JOIN EPQOP.LC_USUARIOS LCU ON LCU.USU_USUARIO = PWD.NAME 
LEFT JOIN EPQOP.SECURITY_USERS SU ON SU.NAME = LCU.USU_USUARIO 
LEFT JOIN RHEPQ.ADMROLUSUARIO RU ON ru.IDUSUARIO = u.ID
LEFT JOIN RHEPQ.ADMROL R ON r.ID = ru.IDROL
INNER JOIN RHEPQ.ADMSISTEMA S ON S.ID = R.IDSISTEMA 
INNER JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = U.EMP_CODIGO
WHERE u.USERNAME = 'AdminMaster01' AND LCU.USU_ESTADO = 'A';
 

-- biometrico accesos para login
 SELECT 
                pwd.STATUS, 
                pwd.CODIGO_EMP,
                acc.BIO_TIPO_MARCA,
                acc.BIO_FECHA,
                acc.BIO_ID,
                TRUNC(pwd.FECHA_VENCIMIENTO) - TRUNC(SYSDATE) AS DIAS_RESTANTES 
            FROM EPQOP.USERS_CONTROLSPWD pwd 
            LEFT JOIN RHEPQ.ACCESOS acc 
                ON acc.BIO_ID = pwd.CODIGO_EMP
            WHERE pwd.NAME = 'AdminMaster01'
                AND TRUNC(acc.BIO_FECHA) = TRUNC(SYSDATE)
                AND ROWNUM = 1
            ORDER BY acc.BIO_CORRELATIVO DESC
            

            SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 999999
            




BEGIN
	            SELECT CODIGO_EMP INTO vCodEmpleado FROM EPQOP.USERS_CONTROLSPWD WHERE NAME = pUsername AND ROWNUM = 1;
		        EXCEPTION
		            WHEN NO_DATA_FOUND THEN
		                vCodEmpleado := NULL;
        	END;



			vCodEmpleado NUMBER;









			            if (result.result is DataSet dataSet && dataSet.Tables.Count > 0 && dataSet.Tables[0].Rows.Count > 0)
            {
                email = dataSet.Tables[0].Rows[0]["EMP_INTERNET"].ToString();
                username = dataSet.Tables[0].Rows[0]["USERNAME"].ToString();
            }

            var validadorParam = parameters.FirstOrDefault(p => p.name == "pValidador");
            int pValidador = 0;

            if (validadorParam != null && validadorParam.value != null)
            {
                Oracle.ManagedDataAccess.Types.OracleDecimal oracleDecimal = (Oracle.ManagedDataAccess.Types.OracleDecimal)validadorParam.value;
                pValidador = (int)oracleDecimal.Value;
            }
















 SELECT 
                pwd.STATUS, 
                pwd.CODIGO_EMP,
                acc.BIO_TIPO_MARCA,
                acc.BIO_FECHA,
                acc.BIO_ID,
                TRUNC(pwd.FECHA_VENCIMIENTO) - TRUNC(SYSDATE) AS DIAS_RESTANTES 
            FROM EPQOP.USERS_CONTROLSPWD pwd 
            LEFT JOIN RHEPQ.ACCESOS acc 
                ON acc.BIO_ID = pwd.CODIGO_EMP
            WHERE pwd.NAME = 'AdminMaster01'
                AND TRUNC(acc.BIO_FECHA) = TRUNC(SYSDATE)
                AND ROWNUM = 1
            ORDER BY acc.BIO_CORRELATIVO DESC
            

            SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 999999
            
            
SELECT * FROM RHEPQ.ADMUSUARIO a 


SELECT CODIGO_EMP INTO vIdUsuario FROM EPQOP.USERS_CONTROLSPWD WHERE EMPLE = 'olivercruz1946'


SELECT uc.NAME, uc.PALABRASECRETA, lu.USU_DPI, uc.STATUS
                FROM EPQOP.USERS_CONTROLSPWD uc
                LEFT JOIN EPQOP.LC_USUARIOS lu ON UC.NAME = lu.USU_USUARIO
                WHERE TRIM(uc.PALABRASECRETA) = TRIM('jerameell') AND TRIM(uc.NAME) = TRIM('olivercruz1946');
                
               
	            SELECT uc.NAME, uc.PALABRASECRETA, lu.USU_DPI, uc.STATUS
	            FROM RHEPQ.ADMUSUARIO u
	            JOIN EPQOP.USERS_CONTROLSPWD uc ON u.USERNAME = uc.NAME
	            LEFT JOIN EPQOP.LC_USUARIOS lu ON UC.NAME = lu.USU_USUARIO
	            LEFT JOIN RHEPQ.PLA_EMP_EMPLEADO pee ON u.EMP_CODIGO = pee.EMP_CODIGO
	            WHERE TRIM(pee.EMP_INTERNET) = TRIM('marias1409@puerto-quetzal.com') AND TRIM(u.USERNAME) = TRIM('olivercruz1946');
               
               
               SELECT EMP_CODIGO, EMP_INTERNET FROM RHEPQ.PLA_EMP_EMPLEADO pee 
               
               SELECT * FROM EPQOP.lc_roles
               
               SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE NAME LIKE '%AdminMaster%';

               SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE CODIGO_EMP = 5;
               
               SELECT DISTINCT
                U.ID,
                U.USERNAME,
                U.REMEMBERTOKEN,
                U.SESSIONTIME,
                U.CREADO,
                U.CREADOPOR,
                U.ACTUALIZADO,
                U.ACTUALIZADOPOR,
                U.EMP_CODCIA,
                U.EMP_CODIGO
            FROM RHEPQ.ADMUSUARIO U
               
               SELECT EMP_CODIGO FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 999999
               

               

               SELECT COUNT(*) AS isJoin  FROM RHEPQ.PLA_EMP_EMPLEADO E
               INNER JOIN EPQOP.USERS_CONTROLSPWD U ON U.CODIGO_EMP = E.EMP_CODIGO
               
               SELECT COUNT(*) AS emp  FROM RHEPQ.PLA_EMP_EMPLEADO
               
               SELECT COUNT(*)  FROM EPQOP.USERS_CONTROLSPWD WHERE CODIGO_EMP IS NOT NULL
               

		  SELECT 
			U.ID AS idUsuario,
			U.USERNAME,
			UR.PASSWORD,	
			UR.PALABRASECRETA	
		FROM RHEPQ.ADMUSUARIO U
		INNER JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = U.USERNAME


		SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE NAME LIKE '%AdminMaster%';
		
SELECT U.USERNAME, PWD.NAME, PWD.CODIGO_EMP, E.EMP_CODIGO FROM RHEPQ.ADMUSUARIO U
INNER JOIN EPQOP.USERS_CONTROLSPWD PWD ON PWD.NAME = U.USERNAME 
INNER JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = PWD.CODIGO_EMP


SELECT PALABRASECRETA FROM EPQOP.USERS_CONTROLSPWD WHERE NAME = pUsername

SELECT * FROM RHEPQ.ADMROLUSUARIO a 

SELECT * FROM RHEPQ.ADMUSUARIO

SELECT EMP_CODIGO FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_SEGUNDO_NOM LIKE '%HER%'


          SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'USERS_CONTROLSPWD' AND OWNER = 'EPQOP';


SELECT * FROM EPQOP.USUARIOS_REST WHERE USUARIO LIKE '%AdminMaster%';

SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE NAME LIKE '%AdminMaster%';
--DELETE FROM RHEPQ.ADMROLUSUARIO WHERE IDUSUARIO = 1

--DELETE FROM RHEPQ.ADMUSUARIO WHERE ID = 1

-- DELETE FROM EPQOP.USUARIOS_REST WHERE USUARIO = 'AdminMaster01'


"549881"


INSERT INTO EPQOP.USERS_CONTROLSPWD
(NAME, DESCRIPTION, STATUS, PASSWORD1, PASSWORD2, CONTROL1, CONTROL2, FECHA_ALTA, USUARIOCREA, PALABRASECRETA, CODIGO_EMP, FECHA_VENCIMIENTO, CLAVE_SOP)
VALUES
('AdminMaster01', 'NUEVOUSER', 'A', '$2a$11$Bj/X414GJMFwAcyKNTFSW.Wrr4fFISqOs2dMTy4y1O88wIP67ablS', '%%%%%g', 'INFORMATICA', 'Creado x informatica', TO_TIMESTAMP('2007-02-25 21:28:35.000', 'YYYY-MM-DD HH24:MI:SS.FF3'), 'federicoy1672', 'dev', '999999', ADD_MONTHS(SYSDATE, 12), '');


SELECT DISTINCT
                U.ID,
                U.USERNAME,
                PWD.STATUS AS ESTADO,               
                U.EMP_CODCIA,
                U.EMP_CODIGO,
                E.EMP_INTERNET AS correo,
                RHEPQ.obtenerRoles(u.id) as roles
            FROM RHEPQ.ADMUSUARIO U
            INNER JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = U.USERNAME
            LEFT JOIN EPQOP.USERS_CONTROLSPWD PWD ON PWD.NAME = UR.USUARIO
            INNER JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = U.EMP_CODIGO 
            WHERE U.EMP_CODIGO = 2193 AND PWD.STATUS = 'A';


SELECT
			    U.ID,
			    U.USERNAME,
			    PWD.STATUS AS ESTADO,               
			    U.EMP_CODCIA,
			    PWD.CODIGO_EMP AS EMP_CODIGO,
			    E.EMP_INTERNET AS correo,
			    RHEPQ.obtenerRoles(U.ID) AS roles,
			    PWD.NAME AS usernamePwd
			FROM EPQOP.USERS_CONTROLSPWD PWD
			LEFT JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = PWD.NAME
			LEFT JOIN RHEPQ.ADMUSUARIO U ON U.USERNAME = UR.USUARIO
			LEFT JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = U.EMP_CODIGO
			WHERE PWD.CODIGO_EMP = 2193;
		
		SELECT * FROM RHEPQ.ADMUSUARIO
		SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE NAME LIKE '%AdminMaster%';
      	SELECT * FROM EPQOP.USUARIOS_REST WHERE USUARIO LIKE '%AdminMaster%';
            
            SELECT * FROM EPQOP.LC_USUARIOS
            
            
            
  SELECT COLUMN_NAME, data_type, data_length, nullable
FROM ALL_TAB_COLUMNS 
WHERE TABLE_NAME = 'PLA_EMP_EMPLEADO' AND OWNER = 'RHEPQ';
               












CREATE OR REPLACE PROCEDURE RHEPQ.SPADMUSUARIO(
    pOpcion IN NUMBER,
    pId IN OUT NUMBER,
    pUsername IN VARCHAR2 DEFAULT NULL,
    pPassword IN VARCHAR2 DEFAULT NULL,
    pPalabraSecreta IN VARCHAR2 DEFAULT NULL,
    pRememberToken IN VARCHAR2 DEFAULT NULL,
    pSessionTime IN NUMBER DEFAULT NULL,
    pEstado IN NUMBER DEFAULT 1,
    pEmpCodcia IN VARCHAR2 DEFAULT NULL,
    pEmpCodigo IN NUMBER DEFAULT NULL,
    pIdRol IN NUMBER DEFAULT NULL,
    pCorreo IN VARCHAR2 DEFAULT NULL,
    pUsuario IN NUMBER,
    pPageNumber IN NUMBER DEFAULT 1,
    pPageSize IN NUMBER DEFAULT 10,
    pValidador OUT NUMBER,
    pCursor OUT SYS_REFCURSOR,
    pTotalPage OUT NUMBER
) AS
    vIdUsuario NUMBER;
    vCodigo NUMBER;
    vCod VARCHAR2(5);
    vContador NUMBER;	
	vPalabraSecreta VARCHAR2(20);
	vNuevoId NUMBER;
BEGIN
	
    SAVEPOINT transact;

    IF pOpcion = 1 THEN
        BEGIN
            SELECT ID INTO vIdUsuario FROM RHEPQ.ADMUSUARIO WHERE EMP_CODIGO = pEmpCodigo AND ROWNUM = 1;
           	SELECT PALABRASECRETA INTO vPalabraSecreta FROM EPQOP.USERS_CONTROLSPWD WHERE NAME = pUsername;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                vIdUsuario := NULL;
               vPalabraSecreta := NULL;
        END;

        IF vIdUsuario IS NULL THEN

            -- Primero, insertar en EPQOP.USUARIOS_REST
            INSERT INTO EPQOP.USUARIOS_REST
            (USUARIO, DPI, PASSWORD, PALABRASECRETA, RESETEOPWD)
            VALUES
            (pUsername, null, pPassword, vPalabraSecreta, '0');

            -- Luego, insertar en ADMUSUARIO           
           INSERT INTO RHEPQ.ADMUSUARIO (
	            ID, USERNAME, REMEMBERTOKEN, SESSIONTIME, ESTADO, CREADO, CREADOPOR, EMP_CODCIA, EMP_CODIGO, EMAIL
	        ) VALUES (
	            RHEPQ.ADMUSUARIOSEQ.NEXTVAL, pUsername, pRememberToken, pSessionTime, 
	            CASE 
	                WHEN pCorreo IS NULL THEN 2
	                ELSE 1
	            END, 
	            SYSDATE, pUsuario, pEmpCodcia, pEmpCodigo, pCorreo
	        )            
	        RETURNING ID INTO pId;

	       
            -- Asignar rol al nuevo usuario
	       SELECT RHEPQ.ADMROLUSUARIOSEQ.NEXTVAL INTO vNuevoId FROM DUAL;
	      
            INSERT INTO ADMROLUSUARIO 
            (ID, IDROL, IDUSUARIO, ESTADO, CREADO, CREADOPOR) 
            VALUES 
            (vNuevoId, pIdRol, pId, 1, SYSDATE, pUsuario);
           
            -- Se actualiza la contraseña y el estado de usuario en tabla correspondiente
           UPDATE EPQOP.users_controlspwd 
			SET STATUS = CASE 
			                 WHEN pCorreo IS NOT NULL THEN 'C'
			                 ELSE 'A'
			             END,
			    FECHA_VENCIMIENTO = TRUNC(SYSDATE) + INTERVAL '30' DAY,
			    PASSWORD1 = pPassword 
			WHERE NAME = pUsername AND STATUS != 'D';
					             
            pValidador := 1;

        ELSIF vIdUsuario IS NOT NULL THEN
            -- Verificar si el rol ya está asignado al usuario
            BEGIN
                SELECT ID INTO vContador FROM ADMROLUSUARIO 
                WHERE IDUSUARIO = vIdUsuario AND IDROL = pIdRol AND ROWNUM = 1;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                    vContador := NULL;
            END;
    
            -- Asignar o actualizar el rol
            IF vContador IS NULL THEN
                -- Asignar rol al usuario existente si no tiene ese rol
    	       SELECT RHEPQ.ADMROLUSUARIOSEQ.NEXTVAL INTO vNuevoId FROM DUAL;
            	      
                INSERT INTO ADMROLUSUARIO 
                (ID, IDROL, IDUSUARIO, ESTADO, CREADO, CREADOPOR) 
                VALUES                 
                (vNuevoId, pIdRol, vIdUsuario, pEstado, SYSDATE, pUsuario); -- Corregido: Añadido punto y coma
               
                pValidador := 2;
            ELSE
                -- Actualizar rol existente
                UPDATE ADMROLUSUARIO SET
                    ESTADO = pEstado,
                    ACTUALIZADO = SYSDATE,
                    ACTUALIZADOPOR = pUsuario
                WHERE IDUSUARIO = vIdUsuario AND IDROL = pIdRol; -- Corregido: Añadido punto y coma
               
                pValidador := 2;
            END IF;
        END IF;
    ELSIF pOpcion = 2 THEN
        UPDATE ADMUSUARIO SET
            USERNAME = pUsername,
            REMEMBERTOKEN = pRememberToken,
            SESSIONTIME = pSessionTime,
            ESTADO = pEstado,
            ACTUALIZADO = SYSDATE,
            ACTUALIZADOPOR = pUsuario,
            EMP_CODCIA = pEmpCodcia,
            EMP_CODIGO = pEmpCodigo
        WHERE ID = pId;
    END IF;

    COMMIT;

    IF pOpcion IN (1, 2, 3, 4) THEN
        OPEN pCursor FOR
			SELECT DISTINCT
                U.ID,
                U.USERNAME,
                UR.PASSWORD,
                U.REMEMBERTOKEN,
                U.SESSIONTIME,
                PWD.STATUS AS ESTADO,
                U.CREADO,
                U.CREADOPOR,
                U.ACTUALIZADO,
                U.ACTUALIZADOPOR,
                U.EMP_CODCIA,
                U.EMP_CODIGO,
                E.EMP_INTERNET,
                U.EMAIL
            FROM RHEPQ.ADMUSUARIO U
            INNER JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = U.USERNAME
            LEFT JOIN EPQOP.USERS_CONTROLSPWD PWD ON PWD.NAME = UR.USUARIO
            INNER JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = U.EMP_CODIGO 
            WHERE U.EMP_CODIGO = pEmpCodigo;
           
    -- obtener roles
    ELSIF pOpcion = 5 THEN
        OPEN pCursor FOR
			SELECT
			    U.ID,
			    U.USERNAME,
			    PWD.STATUS AS ESTADO,               
			    U.EMP_CODCIA,
			    PWD.CODIGO_EMP AS EMP_CODIGO,
			    E.EMP_INTERNET AS correo,
			    RHEPQ.obtenerRoles(U.ID) AS roles,
			    PWD.NAME AS usernamePwd
			FROM EPQOP.USERS_CONTROLSPWD PWD
			LEFT JOIN EPQOP.USUARIOS_REST UR ON UR.USUARIO = PWD.NAME
			LEFT JOIN RHEPQ.ADMUSUARIO U ON U.USERNAME = UR.USUARIO
			LEFT JOIN RHEPQ.PLA_EMP_EMPLEADO E ON E.EMP_CODIGO = U.EMP_CODIGO
			WHERE PWD.CODIGO_EMP = pEmpCodigo AND ROWNUM = 1;
           
   -- Validar datos de seguridad del usuario
    ELSIF pOpcion = 6 THEN
        OPEN pCursor FOR
	       SELECT  
	        uc.NAME, 
	        uc.PALABRASECRETA, 
	        lu.USU_DPI,
	        uc.STATUS  
	        FROM EPQOP.USERS_CONTROLSPWD uc
	        LEFT JOIN EPQOP.LC_USUARIOS lu 
	        ON UC.NAME = lu.USU_USUARIO
	        WHERE RTRIM(uc.PALABRASECRETA) = pPalabraSecreta AND RTRIM(uc.NAME) = pUsername;
	       
   -- Opcion para validar datos del usuario e iniciar el reinicio de contrasenia
   	ELSIF pOpcion = 7 THEN
       	OPEN pCursor FOR
            SELECT
            	ADM.ID AS idUsuario,
                u.USU_USUARIO,
                u.USU_CODIGO,
                pwd.PALABRASECRETA,
                ur.PASSWORD,
                pwd.PASSWORD1,
                pwd.PASSWORD2,
                ADM.EMAIL
            FROM EPQOP.LC_USUARIOS u
            LEFT JOIN EPQOP.users_controlspwd pwd on pwd.NAME = u.USU_USUARIO
            LEFT JOIN EPQOP.USUARIOS_REST ur on ur.USUARIO = u.USU_USUARIO
            INNER JOIN RHEPQ.ADMUSUARIO ADM ON ADM.USERNAME = U.USU_USUARIO
            WHERE pwd.NAME = pUsername AND ADM.EMAIL = pCorreo;
           
  	ELSIF pOpcion = 8 THEN
        -- Actualizar contraseña y otros campos
        UPDATE EPQOP.users_controlspwd 
        SET STATUS = 'A',
            FECHA_VENCIMIENTO = TRUNC(SYSDATE) + INTERVAL '30' DAY,
            PASSWORD1 = pPassword,
            PASSWORD2 = pPalabraSecreta,
            USUARIOCREA = pUsername,
            FECHA_ALTA = SYSDATE
        WHERE NAME = pUsername;
       
       UPDATE EPQOP.USUARIOS_REST 
        SET PASSWORD = pPassword,
            RESETEOPWD = '0' 
        WHERE USUARIO = pUsername;
	       
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK TO transact;
        RAISE;
END SPADMUSUARIO;



 ELSIF pOpcion = 5 THEN
        SELECT COUNT(*) INTO vContador FROM PLA_EMP_EMPLEADO WHERE EMP_CODCIA = pEmpCodCia;
        pTotalPage := CEIL(vContador / pPageSize);
       --pTotalPage := vContador;

        OPEN pCursor FOR
            SELECT * FROM (
                SELECT temp.*, ROWNUM rnum
                FROM (
                    SELECT 
                        EMP_CODIGO,
                        EMP_CODIGO_ANTERIOR,
                        EMP_PRIMER_APE,
                        EMP_SEGUNDO_APE,
                        EMP_APELLIDO_CAS,
                        EMP_PRIMER_NOM,
                        EMP_SEGUNDO_NOM,
                        EMP_TERCER_NOM,
                        EMP_NOMBRE_ISSS,
                        EMP_NOMBRE_CIP,
                        EMP_NOMBRE_NIT,
                        EMP_DIRECCION,
                        EMP_CODDEP,
                        EMP_CODMUN,
                        EMP_TELEFONO,
                        EMP_RENGLON,
                        EMP_CODIGO_POSTAL,
                        EMP_FECHA_NAC,
                        EMP_LUGAR_NAC,
                        EMP_CODDEP_NAC,
                        EMP_LUGAR_NAC_TEXT,
                        EMP_NACIONALIDAD,
                        EMP_AFP,
                        EMP_COD_AGENTE,
                        EMP_SUPERVISOR,
                        EMP_FECHA_INGRESO,
                        EMP_SEXO,
                        EMP_ESTADO_CIVIL,
                        EMP_TIPO_SANGRE,
                        EMP_PROFESION,
                        EMP_CODREN,
                        EMP_ZONA,
                        EMP_AREA,
                        EMP_NO_COLEGIADO,
                        EMP_FECHAING_REPORTE,
                        EMP_CODUNI_UBI,
                        EMP_FECHA_FICHADATOS,
                        EMP_TARJETA,
                        EMP_HORA_EXTRA,
                        EMP_DESC_ISSS,
                        EMP_DESC_ISSS_JUB,
                        EMP_COLEGIADO_ACTIVO,
                        EMP_CIP,
                        EMP_EXPEDIDA_FECHA,
                        EMP_DPI_FECHA_VENCE,
                        EMP_EXPEDIDA_DEP,
                        EMP_EXPEDIDA_MUN,
                        EMP_DPI,
                        EMP_COMISION,
                        EMP_DOMICILIADO,
                        EMP_SERV_PRESTADOS,
                        EMP_RENTA_DOMICILIADO,
                        EMP_RENTA_SERVICIO,
                        EMP_ESTADO,
                        EMP_ACUERDO_BAJA,
                        EMP_CODUBI,
                        EMP_CODTPP,
                        EMP_CODAFN,
                        EMP_ISSS,
                        EMP_NIT,
                        EMP_ELECTORAL,
                        EMP_ELECTORAL_EXTENDIDO_EN,
                        EMP_CARNET_RESIDENTE,
                        EMP_NUP,
                        EMP_REUBI,
                        EMP_REUBI_ING,
                        EMP_FECHA_RETIRO,
                        EMP_FECHARET_REPORTE,
                        EMP_CODMRT,
                        EMP_INDEMNIZACION,
                        EMP_PESO,
                        EMP_ESTATURA,
                        EMP_DONANTE,
                        EMP_INTERNET,
                        EMP_TALLA_ZAPATOS,
                        EMP_TALLA_PANTALON,
                        EMP_TALLA_CAMISA,
                        EMP_USA_LENTES,
                        EMP_FUMA,
                        EMP_BEBIDA_ALCOHOLICA,
                        EMP_IMPEDIMENTO,
                        EMP_SERVICIO_MILITAR,
                        EMP_GRADO_MILITAR,
                        EMP_CASA,
                        EMP_CUOTA_VIVIENDA,
                        EMP_PROM_INGRESO_FAM,
                        EMP_COLEGIATURAS,
                        EMP_QUIEN_CUIDA_HIJOS,
                        EMP_TIPO_BONO_ESC,
                        EMP_FECHA_PAGO_BONOESCOLAR,
                        EMP_VEHI_MODELO,
                        EMP_VEHI_ANO,
                        EMP_PLACA,
                        EMP_TIPO_LICENCIA,
                        EMP_TIPFECHA_LICEN,
                        EMP_CODRLI,
                        EMP_FECHA_CREA,
                        EMP_USUARIO_CREA,
                        EMP_FECHA_MOD,
                        EMP_USUARIO_MOD,
                        EMP_CODTPU,
                        EMP_CODPUE,
                        EMP_CODUNI,
                        EMP_SALARIO,
                        EMP_TIPO_SALARIO,
                        EMP_FECHA_DEL,
                        EMP_FECHA_AL,
                        EMP_ACUERDO,
                        EMP_JORNADA_CONTRATO,
                        EMP_TRABAJA_CONYUGE,
                        EMP_DEVENGADO_CONYUGE,
                        EMP_AFECTO_ACEP,
                        EMP_DESCUENTA_FIANZA,
                        EMP_AFECTO_MONTEPIO,
                        EMP_FRECUECIA_PAGO,
                        EMP_PLAN_JUBILA,
                        EMP_CODCEL,
                        EMP_BECA,
                        EMP_USA_CLINICA,
                        EMP_CTA_EMPLEADOS_CONTRA,
                        EMP_JUNTADIR,
                        EMP_INTERINATO
                    FROM PLA_EMP_EMPLEADO
                    WHERE EMP_CODCIA = pEmpCodCia
                    ORDER BY EMP_CODCIA, EMP_CODIGO
                ) temp
                WHERE ROWNUM <= pPageNumber * pPageSize
            )
            WHERE rnum > (pPageNumber - 1) * pPageSize;       






            declare
	
	cursor c1 is select 'x'
	               from pla_inf_ingresos_fijos
	              where inf_codcia = :header.compania
	                and inf_codemp = :b1.emp_codigo
	                and inf_codtig = '01';
	
	cursor c2 is select css_minimo
	               from pla_css_clasalarial, pla_plz_plaza, pla_pue_puesto
	              where plz_codcia = :header.compania
	                and plz_codigo = :b2.dpl_codplz
	                and pue_codcia = plz_codcia
	                and pue_codtpp = plz_codtpp
	                and pue_codigo = plz_codpue
	                and css_codcia = pue_codcia
	                and css_codigo = pue_codcss;
	                
dummy		  varchar2(3);
v_valor   number(9,2);	                
begin
	
	open c1;
	fetch c1 into dummy;
	  if  c1%notfound then
	  	open c2;
	  	fetch c2 into v_valor;
	  	if c2%notfound then
	  		msg_alerta('El puesto asignado a esta plaza no tiene escala salarial');
	  	  raise form_trigger_failure;
	  	end if;
	  	close c2;
	  	
	  	:inf_codtig := '01';
	  	:inf_valor  := v_valor;
	  	begin
				select tig_descripcion into :pla_inf_ingresos_fijos.desc_codtig
				 from pla_tig_tipo_ingreso
        where tig_codcia = :header.compania
          and tig_codigo = :pla_inf_ingresos_fijos.inf_codtig;
exception
	when no_data_found then null;
end;

	  	                            
	  end if;
	  close c1;
end;

declare alerta ALERT := find_alert('ERROR');
        dummy number;
        desc_error VARCHAR2(80);
Begin
if not( :b2.DPL_CODPLZ IS NOT NULL ) then
  desc_error := 'El Codigo de Plaza Debe Ser Especificado';
  set_alert_property(alerta, alert_message_text, desc_error);
  dummy := show_alert('ERROR');
  if dummy = alert_button1 then
   raise form_trigger_failure;
  end if;
end if;
If :b2.dpl_codplz <> :b2.codplz_tmp or
   :b2.codplz_tmp is null then
Select plz_nombre
  into :b2.desc_plz
  from pla_plz_plaza
  where plz_codcia = :header.compania and
        plz_codigo = :b2.dpl_codplz   and
        plz_estado = 'V';
end if;
Exception
   When No_Data_Found then bell;
   desc_error := 'Plaza No existe o Ya Esta Ocupada';
   set_alert_property(alerta, alert_message_text, desc_error);
   dummy := show_alert('ERROR');
   if dummy = alert_button1 then
     Raise Form_Trigger_Failure;
   end if;
end;



-------------------



			 -- saber table de llave externa:
SELECT ACC.TABLE_NAME 
FROM ALL_CONS_COLUMNS ACC
JOIN ALL_CONSTRAINTS AC ON ACC.OWNER = AC.R_OWNER
                        AND ACC.CONSTRAINT_NAME = AC.R_CONSTRAINT_NAME
WHERE AC.CONSTRAINT_NAME = 'PLA_PUE_PLA_TPP_FK1'
  AND AC.OWNER = 'RHEPQ';


-- SP
 
SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'SP_PLA_PUE_PUESTO' 
  AND OWNER = 'RHEPQ';


  -- identity:

    IF pRIICodigo IS NULL THEN
        SELECT NVL(MAX(RII_CODIGO), 0) + 1 INTO pRIICodigo
        FROM REC_RII_RELACION_INTERNA
        WHERE RII_CODCIA = pRIICodCia
            AND RII_CODTPP = pRIICodTpp
            AND RII_CODPUE = pRIICodPue;
    END IF;


-- LLAVE PRIMARIA

SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND ac.table_name = 'REC_CFU_CARGO_FUNCIONAL'
  AND ac.owner = 'RHEPQ';
 
 
	    -- TABLA                                                                                  
	          SELECT COLUMN_NAME, data_type, data_length, nullable
	FROM ALL_TAB_COLUMNS 
	WHERE TABLE_NAME = 'REC_CFU_CARGO_FUNCIONAL' AND OWNER = 'RHEPQ';
	
   SELECT * FROM RHEPQ.REC_CFU_CARGO_FUNCIONAL CFU
   INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TPP ON TPP.TPP_CODIGO = CFU.CFU_CODTPP
   INNER JOIN RHEPQ.PLA_PUE_PUESTO PUE ON PUE.PUE_CODIGO = CFU.CFU_CODPUE

SELECT a.table_name AS tabla_dependiente, 
       a.constraint_name AS nombre_restriccion
FROM all_constraints a
JOIN all_cons_columns b ON a.constraint_name = b.constraint_name
WHERE a.constraint_type = 'R'
AND b.table_name = 'PLA_CON_CONTRATO'
AND a.owner = 'RHEPQ';


SELECT * FROM PLA_EMP_PROBIDAD WHERE PRO_CODEMP = 1672


SELECT 
FROM RHEPQ.PLA_PUE_PUESTO P
INNER JOIN RHEPQ.PLA_TPP_TIPUESTO ON TP.TPP_CODIGO = P.PUE_CODIGO



SELECT table_name
FROM all_tables
WHERE UPPER(table_name) LIKE '%REN%';

SELECT table_name 
FROM user_tables 
WHERE UPPER(table_name) LIKE '%REN%';

SELECT 
    TABLE_NAME
FROM 
    ALL_TABLES
WHERE 
    OWNER = 'RHEPQ'
    AND TABLE_NAME LIKE '%PUE%';
   
   

   
      SELECT * FROM RHEPQ.PLA_CSS_CLASALARIAL - PUE_CODCSS
   --SELECT * FROM RHEPQ.PLA_CCO_CEN_COSTO - PUE_CEN_COSTO
   SELECT * FROM RHEPQ.PLA_CPU_CTA_PUESTO - PUE_CODCPU
   SELECT * FROM RHEPQ.PLA_CVA_CLASIF_VALUACION - PUE_CODCVA
   SELECT * FROM RHEPQ.PLA_UNI_UNIDAD - PUE_CODUNI_GER
   SELECT * FROM RHEPQ.PLA_UNI_UNIDAD - PUE_CODUNI_SG
   rec_fun_funcion
   
   SELECT * FROM RHEPQ.REC_CFU_CARGO_FUNCIONAL CFU
   INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TPP ON TPP.TPP_CODIGO = CFU.CFU_CODTPP
   INNER JOIN RHEPQ.PLA_PUE_PUESTO PUE ON PUE.PUE_CODIGO = CFU.CFU_CODPUE
   
   
   		SELECT * FROM RHEPQ.PLA_CPU_CTA_PUESTO
   		
SELECT 
    CFU.ROWID AS id,
    CFU.CFU_CODCIA,
    CFU.CFU_CODPUE COD_CLASE_PUESTO,
    PUE_ORIGINAL.PUE_NOMBRE AS NOM_CLASE_PUESTO,
    CFU.CFU_CODTPP_I COD_TIPO_PUESTO,
    TPP_INTERINO.TPP_DESCRIPCION AS NOM_TIPO_PUESTO,
    CFU.CFU_CODPUE_I AS COD_PUESTO,
    PUE_INTERINO.PUE_NOMBRE AS NOM_PUESTO,
    CFU.CFU_OBSERVACION,
    CFU.CFU_ACCESO,
    TPP_ORIGINAL.TPP_CODIGO AS COD_SERIE_PUESTO,
    TPP_ORIGINAL.TPP_DESCRIPCION AS NOM_SERIE_PUESTO
FROM 
    RHEPQ.REC_CFU_CARGO_FUNCIONAL CFU
INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TPP_ORIGINAL ON TPP_ORIGINAL.TPP_CODIGO = CFU.CFU_CODTPP
INNER JOIN RHEPQ.PLA_PUE_PUESTO PUE_ORIGINAL ON PUE_ORIGINAL.PUE_CODIGO = CFU.CFU_CODPUE
INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TPP_INTERINO ON TPP_INTERINO.TPP_CODIGO = CFU.CFU_CODTPP_I
INNER JOIN RHEPQ.PLA_PUE_PUESTO PUE_INTERINO ON PUE_INTERINO.PUE_CODIGO = CFU.CFU_CODPUE_I
WHERE CFU.CFU_CODPUE = 123
ORDER BY CFU.CFU_CODCIA, CFU.CFU_CODTPP, CFU.CFU_CODPUE;

   
SELECT * FROM PRE_REN_RENGLONES WHERE REN_ANIO = '2024'

SELECT * FROM PRE_UNR_UNIDADES_RENGLON


SELECT EMP_CODREN, EMP_NOMBRE_ISSS FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 4

SELECT * FROM RHEPQ.PLA_FDE_FAMILIADEP pff 
SELECT * FROM RHEPQ.PLA_PRT_PARENTESCO
SELECT * FROM RHEPQ.ADMSISTEMA 

SELECT * FROM RHEPQ.PLA_PUE_PUESTO 

ALTER TRIGGER RHEPQ.TGUDI_PUE_PUESTOS COMPILE;

SELECT status
FROM user_triggers
WHERE trigger_name = 'TGUDI_PUE_PUESTOS';

SHOW ERRORS TRIGGER RHEPQ.TGUDI_PUE_PUESTOS;

SELECT *
FROM user_errors
WHERE name = 'TGUDI_PUE_PUESTOS' AND type = 'TRIGGER';

SELECT * FROM RHEPQ.B_PLA_PUE_PUESTOS ORDER BY PUE_CODIGO DESC
SELECT * FROM RHEPQ.PLA_PUE_PUESTO WHERE PUE_CODIGO = 1012 ORDER BY PUE_CODIGO DESC


		            SELECT 
			                P.ROWID AS id,
			                P.PUE_CODCIA,
			                P.PUE_CODTPP,
			                P.PUE_CODIGO,
			                P.PUE_NOMBRE,
			                P.PUE_NOMBRE_ING,
			                P.PUE_DESCRIPCION,
			                P.PUE_ESTADO,
			                P.PUE_FECHA_SUPRE,
			                P.PUE_CODCSS,
			                P.PUE_EDAD_MIN,
			                P.PUE_EDAD_MAX,
			                P.PUE_EST_CIVIL,
			                P.PUE_SEXO,
			                P.PUE_CEN_COSTO,
			                P.PUE_BONO,
			                P.PUE_RECARGO,
			                P.PUE_CODCPU,
			                P.PUE_BONO_VOLUMEN,
			                P.PUE_ING_BONO_VOLUMEN,
			                P.PUE_BONO_MARCA,
			                P.PUE_ING_BONO_MARCA,
			                P.PUE_PREMIO_VOLUMEN,
			                P.PUE_ING_PREMIO_VOLUMEN,
			                P.PUE_PREMIO_MARCA,
			                P.PUE_ING_PREMIO_MARCA,
			                P.PUE_COMISION,
			                P.PUE_ING_COMISION,
			                P.PUE_INCENTIVOS,
			                P.PUE_ING_INCENTIVOS,
			                P.PUE_CODCVA,
			                P.PUE_PUNTAJE_VALUACION,
			                P.PUE_REQUIERE_EVALUACION,
			                P.PUE_CODUNI_GER,
			                P.PUE_CODUNI_SG,
			                TP.TPP_DESCRIPCION
			            FROM RHEPQ.PLA_PUE_PUESTO P
			            INNER JOIN RHEPQ.PLA_TPP_TIPUESTO TP ON TP.TPP_CODIGO = P.PUE_CODTPP

------------------



SELECT *  FROM RHEPQ.PLA_BOO_BOLETO_ORNATO WHERE PROD_CODEMP = 1832
SELECT * FROM RHEPQ.PLA_CON_CONTRATO WHERE CON_CONTRATO IS NULL = 597
SELECT * FROM RHEPQ.PLA_CON_CONTRATO WHERE CON_CODEMP = 687 ORDER BY CON_FECHA_CREA DESC
ORDER BY Con_Codemp, Con_PPr1

SELECT rhepq.obtenerUsername(1) FROM DUAL;





SELECT ROWID,DJU_CODCIA,DJU_CODEMP,DJU_CODTDC,DJU_PORCENTAJE,DJU_VALOR,DJU_ESTADO FROM pla_dju_descuento_judicial WHERE (DJU_CODCIA=:1) and (fasdf) order by DJU_CODEMP

SELECT Emp_codren FROM RHEPQ.PLA_EMP_EMPLEADO WHERE Emp_codren = '022' 



SELECT 
FROM RHEPQ.PLA_PUE_PUESTO P
INNER JOIN RHEPQ.PLA_TPP_TIPUESTO ON TP.TPP_CODIGO = P.PUE_CODIGO

------------- LLAVE PRIMARIA ---------------------
ALTER TABLE RHEPQ.PLA_CON_CONTRATO
ADD CONSTRAINT CON_CONTRATO_PK PRIMARY KEY (CON_CONTRATO);
------------- LLAVE PRIMARIA ---------------------


SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 98
SELECT * FROM RHEPQ.PLA_DPL_DATOSPLANILLA WHERE DPL_CODEMP = 2193
SELECT * FROM RHEPQ.PLA_INF_INGRESOS_FIJOS WHERE INF_CODEMP = 2193
SELECT * FROM RHEPQ.PLA_JOR_JORNADA 
SELECT * FROM RHEPQ.PLA_CON_CONTRATO pcc 


SELECT * FROM RHEPQ.PLA_BAN_BONO_ANTIGUEDAD

SELECT * FROM RHEPQ.SIDE_GEN_CIA sgc 




SELECT * FROM RHEPQ.REC_REQ_REQUISITO bpdd 


SELECT * FROM RHEPQ.PLA_MUN_MUNICIPIO pmm 

SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO pee WHERE EMP_CODIGO = 8146

--------------------

SELECT * 
FROM PRE_REN_RENGLONES 
WHERE REN_DESCRIPCION LIKE '%Jubilados%';

		
		SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'PLA_JOR_JORNADA' 
  AND OWNER = 'RHEPQ';
 
 
 
GRANT INSERT ON EPQOP.USERS_CONTROLSPWD TO RHEPQ;
GRANT SELECT ON ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO TO RHEPQ;


        SELECT LOWER(TO_CHAR(TRIM(EMP_PRIMER_NOM) || SUBSTR(TRIM(EMP_PRIMER_APE), 1, 1) || TRIM(EMP_CODIGO))) AS name
        FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 1258;
       

       SELECT * FROM RHEPQ       
       
     
	
	SELECT * FROM RHEPQ.PLA_AFI_AFICION
	
ALTER TABLE sysaudtemp.is_pla_emp_empleado
MODIFY EMP_USUARIO_MOD VARCHAR2(100);

SELECT table_name
FROM all_tables
WHERE UPPER(table_name) LIKE '%PLZ%';

ALTER TABLE RHEPQ.B_PLA_EMP_EMPLEADO
MODIFY EMP_USUARIO_MOD VARCHAR2(100);


--SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_CODIGO = 1088

SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_NOMBRE = 'BOMBERO PORTUARIO' 
SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_NOMBRE = 'ODONTOLOGO' 


SELECT * FROM PLA_PLZ_PLAZA ppp 

SELECT css_minimo
                    FROM pla_css_clasalarial
                    JOIN pla_plz_plaza ON pla_css_clasalarial.css_codcia = pla_plz_plaza.plz_codcia
                    JOIN pla_pue_puesto ON pla_pue_puesto.pue_codcia = pla_plz_plaza.plz_codcia
                                        AND pla_pue_puesto.pue_codtpp = pla_plz_plaza.plz_codtpp
                                        AND pla_pue_puesto.pue_codigo = pla_plz_plaza.plz_codpue
                    WHERE plz_codcia = '001'
                      AND plz_codigo = '1013'
                      AND css_codcia = '001'
                      AND css_codigo = '509';

SELECT *
FROM pla_inf_ingresos_fijos
WHERE inf_codcia = '001'
  AND inf_codemp = 2193
  AND inf_codtig = '01';
 
 SELECT ROWID,TIG_CODCIA,TIG_CODIGO,TIG_DESCRIPCION,TIG_NOMBRECORTO,TIG_CTA_CONTABLE,TIG_CONTABLE_CAT,TIG_CTA_CONTABLE2,TIG_CONTABLE_CAT2,TIG_CTA_PPTO1,TIG_CTA_PPTO2,TIG_RENTA,TIG_ISSS,TIG_AFP,TIG_SALARIO_PROM,TIG_ATCONSA,TIG_FONDO_VAC,TIG_DEVENGADO FROM PLA_TIG_TIPO_INGRESO WHERE (TIG_CODCIA=:1) and (fsdf)


SELECT * FROM RHEPQ.PLA_JOR_JORNADA  

SELECT * FROM PLA_DPL_DATOSPLANILLA WHERE DPL_CODPLZ = 1088

SELECT * FROM sysaudtemp.is_pla_emp_empleado
grant SELECT ON RHEPQ.IS_PLA_EMP_EMPLEADO TO RHEPQ;


-------------- LOGIN

  -- erickl2484

 SELECT 
                pwd.STATUS, 
                pwd.CODIGO_EMP,
                --acc.BIO_TIPO_MARCA,
                2 AS BIO_TIPO_MARCA,
                TRUNC(pwd.FECHA_VENCIMIENTO) - TRUNC(SYSDATE) AS DIAS_RESTANTES 
            FROM EPQOP.USERS_CONTROLSPWD pwd 
            LEFT JOIN RHEPQ.ACCESOS acc ON acc.BIO_ID = pwd.CODIGO_EMP
            WHERE pwd.NAME = 'AdminMaster01' AND ROWNUM = 1
            -- TRUNC(acc.BIO_FECHA) = TRUNC(SYSDATE)
            ORDER BY acc.BIO_CORRELATIVO DESC;
           
           SELECT 
		    UR.USUARIO, 
		    UR.DPI, 
		    UR.PASSWORD, 
		    UR.RESETEOPWD  
		FROM EPQOP.USUARIOS_REST UR
		INNER JOIN RHEPQ.ADMUSUARIO U ON U.USERNAME = UR.USUARIO
		WHERE RTRIM(UR.USUARIO) = RTRIM('AdminMaster01') AND U.ESTADO = 1;
           
	
	   		SELECT * FROM RHEPQ.ADMUSUARIO where USERNAME = 'erickl2484'
   		SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE name = 'AdminMaster01'
   		SELECT * FROM EPQOP.USUARIOS_REST WHERE usuario = 'AdminMaster01' 
		SELECT * FROM RHEPQ.ADMROLUSUARIO WHERE IDUSUARIO = 16
		SELECT * FROM RHEPQ.ADMUSUARIO WHERE EMP_CODIGO = 2484;
	SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 2484 ORDER BY BIO_CORRELATIVO DESC
	
	SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 999999
	
	SELECT EMP_USUARIO_CREA FROM RHEPQ.PLA_EMP_EMPLEADO pee ORDER BY EMP_USUARIO_CREA ASC
	
	SELECT EMP_USUARIO_CREA, EMP_USUARIO_MOD FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 29252

	SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 2193
		
--DELETE  FROM EPQOP.USERS_CONTROLSPWD WHERE NAME = 'erickl2484'
--DELETE  FROM EPQOP.USUARIOS_REST WHERE USUARIO = 'erickl2484'    
--DELETE FROM RHEPQ.ADMUSUARIO WHERE USERNAME = 'erickl2484'
--DELETE FROM RHEPQ.ADMROLUSUARIO WHERE IDUSUARIO = 33
	
	$2a$11$rLqormdpMk1g1V2sdOuwhOhkDjgNgit9PYZcRIrJSnvtvSUqJHwLe

	
	
	 SELECT JOR_CODIGO AS value, JOR_NOMBRE AS label
            FROM PLA_JOR_JORNADA
            WHERE JOR_CODCIA = '001';
	
	

			    SELECT COUNT(*)
		    FROM PLA_EMP_EMPLEADO
		    WHERE EMP_CODCIA = '001'  AND
		    (
		        '2193' IS NULL
		        OR '2193' = ''
		        OR LOWER(EMP_NOMBRE_ISSS) LIKE '%' || LOWER('2193') || '%'
		        OR TO_CHAR(EMP_CODIGO) = '2193' -- Buscar por código del empleado
		    );
		   
		   
   		    SELECT COUNT(*)
		    FROM PLA_EMP_EMPLEADO
		    WHERE EMP_CODCIA = '001' AND
		    (
		        'Emilsa MATTA' IS NULL
		        OR 'Emilsa MATTA' = ''
		        OR LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) LIKE '%' || LOWER(TRIM('Emilsa MATTA')) || '%'
		    );
		   
		   SELECT COUNT(*)
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND
      LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) LIKE '%emilsa matta%';

		   
		   SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 5
		   SELECT RHEPQ.CONCATENAR_NOMBRE_EMPLEADO(9901) FROM DUAL;
		  SELECT ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(9901) FROM DUAL;
		 
		 SELECT EMP_CODIGO, LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO)))
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND EMP_CODIGO = 2193;

 SELECT EMP_CODIGO, LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO)))
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) = ''
		  
		  SELECT 
    EMP_PRIMER_NOM, 
    EMP_SEGUNDO_NOM, 
    EMP_TERCER_NOM, 
    EMP_PRIMER_APE, 
    EMP_SEGUNDO_APE, 
    EMP_APELLIDO_CAS 
FROM RHEPQ.PLA_EMP_EMPLEADO 
WHERE EMP_CODIGO = 9901;


	
	new StoredProcedureParameters { name = "pEmpNombreIsss", value = request.empNombreIsss ?? null, dbType = OracleDbType.Varchar2, direction = ParameterDirection.Input },
	
	 OPEN pCursor FOR
		        SELECT * FROM (
		            SELECT a.*, ROWNUM rnum
		            FROM (
		                SELECT 
		                        EMP_CODIGO,
		                        EMP_CODIGO_ANTERIOR,
		                        EMP_PRIMER_APE,
		                        EMP_SEGUNDO_APE,
		                        EMP_APELLIDO_CAS,
		                        EMP_PRIMER_NOM,
		                        EMP_SEGUNDO_NOM,
		                        EMP_TERCER_NOM,
		                        EMP_NOMBRE_ISSS,
		                        EMP_NOMBRE_CIP,
		                        EMP_NOMBRE_NIT,
		                        EMP_DIRECCION,
		                        EMP_CODDEP,
		                        EMP_CODMUN,
		                        EMP_TELEFONO,
		                        EMP_RENGLON,
		                        EMP_CODIGO_POSTAL,
		                        EMP_FECHA_NAC,
		                        EMP_LUGAR_NAC,
		                        EMP_CODDEP_NAC,
		                        EMP_LUGAR_NAC_TEXT,
		                        EMP_NACIONALIDAD,
		                        EMP_AFP,
		                        EMP_COD_AGENTE,
		                        EMP_SUPERVISOR,
		                        EMP_FECHA_INGRESO,
		                        EMP_SEXO,
		                        EMP_ESTADO_CIVIL,
		                        EMP_TIPO_SANGRE,
		                        EMP_PROFESION,
		                        EMP_CODREN,
		                        EMP_ZONA,
		                        EMP_AREA,
		                        EMP_NO_COLEGIADO,
		                        EMP_FECHAING_REPORTE,
		                        EMP_CODUNI_UBI,
		                        EMP_FECHA_FICHADATOS,
		                        EMP_TARJETA,
		                        EMP_HORA_EXTRA,
		                        EMP_DESC_ISSS,
		                        EMP_DESC_ISSS_JUB,
		                        EMP_COLEGIADO_ACTIVO,
		                        EMP_CIP,
		                        EMP_EXPEDIDA_FECHA,
		                        EMP_DPI_FECHA_VENCE,
		                        EMP_EXPEDIDA_DEP,
		                        EMP_EXPEDIDA_MUN,
		                        EMP_DPI,
		                        EMP_COMISION,
		                        EMP_DOMICILIADO,
		                        EMP_SERV_PRESTADOS,
		                        EMP_RENTA_DOMICILIADO,
		                        EMP_RENTA_SERVICIO,
		                        EMP_ESTADO,
		                        EMP_ACUERDO_BAJA,
		                        EMP_CODUBI,
		                        EMP_CODTPP,
		                        EMP_CODAFN,
		                        EMP_ISSS,
		                        EMP_NIT,
		                        EMP_ELECTORAL,
		                        EMP_ELECTORAL_EXTENDIDO_EN,
		                        EMP_CARNET_RESIDENTE,
		                        EMP_NUP,
		                        EMP_REUBI,
		                        EMP_REUBI_ING,
		                        EMP_FECHA_RETIRO,
		                        EMP_FECHARET_REPORTE,
		                        EMP_CODMRT,
		                        EMP_INDEMNIZACION,
		                        EMP_PESO,
		                        EMP_ESTATURA,
		                        EMP_DONANTE,
		                        EMP_INTERNET,
		                        EMP_TALLA_ZAPATOS,
		                        EMP_TALLA_PANTALON,
		                        EMP_TALLA_CAMISA,
		                        EMP_USA_LENTES,
		                        EMP_FUMA,
		                        EMP_BEBIDA_ALCOHOLICA,
		                        EMP_IMPEDIMENTO,
		                        EMP_SERVICIO_MILITAR,
		                        EMP_GRADO_MILITAR,
		                        EMP_CASA,
		                        EMP_CUOTA_VIVIENDA,
		                        EMP_PROM_INGRESO_FAM,
		                        EMP_COLEGIATURAS,
		                        EMP_QUIEN_CUIDA_HIJOS,
		                        EMP_TIPO_BONO_ESC,
		                        EMP_FECHA_PAGO_BONOESCOLAR,
		                        EMP_VEHI_MODELO,
		                        EMP_VEHI_ANO,
		                        EMP_PLACA,
		                        EMP_TIPO_LICENCIA,
		                        EMP_TIPFECHA_LICEN,
		                        EMP_CODRLI,
		                        EMP_FECHA_CREA,
		                        EMP_USUARIO_CREA,
		                        EMP_FECHA_MOD,
		                        EMP_USUARIO_MOD,
		                        EMP_CODTPU,
		                        EMP_CODPUE,
		                        EMP_CODUNI,
		                        EMP_SALARIO,
		                        EMP_TIPO_SALARIO,
		                        EMP_FECHA_DEL,
		                        EMP_FECHA_AL,
		                        EMP_ACUERDO,
		                        EMP_JORNADA_CONTRATO,
		                        EMP_TRABAJA_CONYUGE,
		                        EMP_DEVENGADO_CONYUGE,
		                        EMP_AFECTO_ACEP,
		                        EMP_DESCUENTA_FIANZA,
		                        EMP_AFECTO_MONTEPIO,
		                        EMP_FRECUECIA_PAGO,
		                        EMP_PLAN_JUBILA,
		                        EMP_CODCEL,
		                        EMP_BECA,
		                        EMP_USA_CLINICA,
		                        EMP_CTA_EMPLEADOS_CONTRA,
		                        EMP_JUNTADIR,
		                        EMP_INTERINATO
		                FROM PLA_EMP_EMPLEADO
		                WHERE EMP_CODCIA = pEmpCodCia AND
						(
		                    pEmpNombreIsss IS NULL
		                    OR pEmpNombreIsss = ''
		                    OR LOWER(EMP_NOMBRE_ISSS) LIKE '%' || LOWER(pEmpNombreIsss) || '%'
		                    OR TO_CHAR(EMP_CODIGO) = pEmpNombreIsss -- Buscar por código del empleado
		                )
		                ORDER BY EMP_CODCIA, EMP_CODIGO
		            ) a
		            WHERE ROWNUM <= pPageNumber * pPageSize
		        )
		        WHERE rnum > (pPageNumber - 1) * pPageSize;

	
	
		
		

	
	
	
	
	
	
	
	
           









SELECT
	PLZ.PLZ_CODIGO,
	PLZ.PLZ_NOMBRE,
	PLZ.PLZ_CODTPP,
	TPP.TPP_DESCRIPCION,
	PLZ.PLZ_CODPUE,
	PUE.PUE_NOMBRE,
	PLZ.PLZ_CODUNI,
	UNI.UNI_COD_ORGANIZ,
	UNI.UNI_NOMBRE,
	PLZ.PLZ_ESTADO,
	PLZ.PLZ_DISPRESP,
	PLZ.PLZ_PPR_N8,
	PLZ.PLZ_CODTMO,
	TMO.TMO_DESCRIPCION,
	PLZ.PLZ_CODUBI,
	PLZ.PLZ_CODTPP,
	PLZ.PLZ_CODAFN,
	GRT.GRT_DESCRIPCION,
	PLZ.PLZ_VALOR_HORA,
	PLZ.PLZ_CEN_COSTO,
	CEN.CCO_DESCRIPCION,
	PLZ.PLZ_CODGRE,
	GRE.GRE_DESCRIPCION,
	PLZ.PLZ_CODESP,
	ESP.ESP_DESCRIPCION,
	PLZ.PLZ_ALMUERZO,
	RHEPQ.FORMAT_DATE(PLZ.PLZ_FECHA_PPTO) AS PLZ_FECHA_PPTO,
	RHEPQ.FORMAT_DATE(PLZ.PLZ_FECHA_SUPRE) AS PLZ_FECHA_SUPRE,
	PLZ.PLZ_PPR_N1,
	PLZ.PLZ_PPR_N2,
	PLZ.PLZ_PPR_N3,
	PLZ.PLZ_PPR_N4,
	PLZ.PLZ_PPR_N5,
	PLZ.PLZ_PPR_N6,
	PLZ.PLZ_PPR_N7,
	'0509' AS PPR_N0509,
	UNI.UNI_CODIGO_2003,
	RHEPQ.obtener_codigo_empleado_plaza(PLZ.PLZ_CODIGO) AS EMP_CODIGO,
	RHEPQ.obtener_nombre_empleado_plaza(PLZ.PLZ_CODIGO) AS NOMBRE_EMPLEADO
FROM RHEPQ.PLA_PLZ_PLAZA PLZ
LEFT JOIN RHEPQ.PLA_PUE_PUESTO PUE ON PUE.PUE_CODTPP = PLZ.PLZ_CODTPP AND PUE.PUE_CODIGO = PLZ.PLZ_CODPUE
			AND PUE.PUE_CODCIA = PLZ.PLZ_CODCIA
LEFT JOIN RHEPQ.PLA_TPP_TIPUESTO TPP ON TPP.TPP_CODIGO = PUE.PUE_CODTPP AND TPP.TPP_CODCIA = PUE.PUE_CODCIA
LEFT JOIN RHEPQ.PLA_UNI_UNIDAD UNI ON UNI.UNI_CODIGO = PLZ.PLZ_CODUNI AND UNI.UNI_CODCIA = PLZ.PLZ_CODCIA
LEFT JOIN RHEPQ.PLA_TMO_TIPO_MANOOBRA TMO ON TMO.TMO_CODIGO = PLZ.PLZ_CODTMO AND TMO.TMO_CODCIA = PLZ.PLZ_CODCIA
LEFT JOIN RHEPQ.PLA_GRT_GRUPOTRABAJO GRT ON GRT.GRT_CODCIA = PLZ.PLZ_CODCIA AND GRT.GRT_CODUBI = PLZ.PLZ_CODUBI 
			AND GRT.GRT_CODTPP = PLZ.PLZ_CODTPP AND GRT.GRT_CODAFN = PLZ.PLZ_CODAFN
LEFT JOIN RHEPQ.PLA_CCO_CEN_COSTO CEN ON CEN.CCO_CODIGO = PLZ.PLZ_CEN_COSTO AND CEN.CCO_CODCIA = PLZ.PLZ_CODCIA 
LEFT JOIN RHEPQ.PLA_ESP_ESPECIALIDAD ESP ON ESP.ESP_CODGRE = PLZ.PLZ_CODGRE AND ESP.ESP_CODIGO = PLZ.PLZ_CODESP
			AND ESP.ESP_CODCIA = PLZ.PLZ_CODCIA
LEFT JOIN RHEPQ.PLA_GRE_GRUPO_ESPECIALIDAD GRE ON GRE.GRE_CODIGO = ESP.ESP_CODGRE
WHERE PLZ.PLZ_CODIGO = 2093

-- Enviar a prod:
Front
origin2	https://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@github.com/EPQIT/EPQ_RRHH_FRONT_V2 (fetch)
origin2	https://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@github.com/EPQIT/EPQ_RRHH_FRONT_V2 (push)

origin2	https://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@github.com/EPQIT/epq_backend_oracle (fetch)
origin2	https://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@github.com/EPQIT/epq_backend_oracle (push)

--- VENTANA WORK

-- saber table de llave externa:
SELECT ACC.TABLE_NAME 
FROM ALL_CONS_COLUMNS ACC
JOIN ALL_CONSTRAINTS AC ON ACC.OWNER = AC.R_OWNER
                        AND ACC.CONSTRAINT_NAME = AC.R_CONSTRAINT_NAME
WHERE AC.CONSTRAINT_NAME = 'PLA_PLZ_PLA_TMO_FK1_1_1'
  AND AC.OWNER = 'RHEPQ';

 SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    CASE 
        WHEN CHAR_USED = 'C' THEN CHAR_LENGTH 
        ELSE DATA_LENGTH 
    END AS MAX_CHAR_LENGTH
FROM 
    ALL_TAB_COLUMNS
WHERE 
    TABLE_NAME = 'REC_FNP_FUNCION_PUESTO'
    AND OWNER = 'RHEPQ'
    AND DATA_TYPE IN ('VARCHAR2', 'CHAR');

SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    DATA_PRECISION, 
    DATA_SCALE
FROM 
    ALL_TAB_COLUMNS
WHERE 
    TABLE_NAME = 'REC_PSV_PUESTO_SUPERVISA'
    AND OWNER = 'RHEPQ'
    AND DATA_TYPE = 'NUMBER';

-- SP
 
SELECT * 
FROM ALL_PROCEDURES 
WHERE LOWER(OBJECT_NAME)  = LOWER('spAdmGenero' )
  AND OWNER = 'RHEPQ';

INSERT INTO RHEPQ.CapaTipoCapacitacion (id, nombre, estado, creado, creadoPor, actualizado, actualizadoPor)
VALUES (RHEPQ.capaTipoCapacitacionSeq.NEXTVAL, 'Externa', 1, SYSDATE, 1, NULL, NULL);

SELECT * FROM RHEPQ.CapaTipoCapacitacion
	                
-- LLAVE PRIMARIA

SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND ac.table_name = 'REC_RII_RELACION_INTERNA'
  AND ac.owner = 'RHEPQ';
 
 
	    -- TABLA                                                                                  
	          SELECT COLUMN_NAME, data_type, data_length, nullable
	FROM ALL_TAB_COLUMNS 
	WHERE TABLE_NAME = 'REC_FRE_FRECUENCIA' AND OWNER = 'RHEPQ';
	

SELECT a.table_name AS tabla_dependiente, 
       a.constraint_name AS nombre_restriccion
FROM all_constraints a
JOIN all_cons_columns b ON a.constraint_name = b.constraint_name
WHERE a.constraint_type = 'R'
AND b.table_name = 'PLA_CON_CONTRATO'
AND a.owner = 'RHEPQ';


SELECT table_name
FROM all_tables
WHERE UPPER(table_name) LIKE '%REN%';

SELECT table_name 
FROM user_tables 
WHERE UPPER(table_name) LIKE '%REN%';


SELECT ac.table_name, acc.column_name
FROM all_constraints ac
JOIN all_cons_columns acc ON ac.constraint_name = acc.constraint_name AND ac.owner = acc.owner
WHERE ac.constraint_type = 'P'
  AND LOWER(ac.table_name)  = LOWER('capaCursoProfesorExterno')
  AND ac.owner = 'RHEPQ';

SELECT 
    TABLE_NAME
FROM 
    ALL_TABLES
WHERE 
    OWNER = 'RHEPQ'
    AND TABLE_NAME LIKE '%UBI%';
   
   	    -- TABLA                                                                                  
	          SELECT COLUMN_NAME, data_type, data_length, nullable
	FROM ALL_TAB_COLUMNS 
	WHERE LOWER(TABLE_NAME)  = LOWER('capaCursoProfesorExterno')  AND OWNER = 'RHEPQ';


   
   ----------------------------------------------------------------------------


   ----------------------------------------------------------------------------

SELECT ROWID,UBI_CODCIA,UBI_CODIGO,UBI_DESCRIPCION FROM PLA_UBI_UBICACION WHERE (UBI_CODCIA=:1) and (fasdf)

SELECT status
FROM user_triggers
WHERE trigger_name = 'TGUDI_PUE_PUESTOS';

SHOW ERRORS TRIGGER RHEPQ.TGUDI_PUE_PUESTOS;

SELECT *
FROM user_errors
WHERE name = 'TGUDI_PUE_PUESTOS' AND type = 'TRIGGER';

SELECT * FROM RHEPQ.B_PLA_PUE_PUESTOS ORDER BY PUE_CODIGO DESC
SELECT * FROM RHEPQ.PLA_PUE_PUESTO WHERE PUE_CODIGO = 1012 ORDER BY PUE_CODIGO DESC



------------------



SELECT *  FROM RHEPQ.PLA_BOO_BOLETO_ORNATO WHERE PROD_CODEMP = 1832
SELECT * FROM RHEPQ.PLA_CON_CONTRATO WHERE CON_CONTRATO IS NULL = 597
SELECT * FROM RHEPQ.PLA_CON_CONTRATO WHERE CON_CODEMP = 687 ORDER BY CON_FECHA_CREA DESC
ORDER BY Con_Codemp, Con_PPr1

SELECT rhepq.obtenerUsername(1) FROM DUAL;





SELECT ROWID,DJU_CODCIA,DJU_CODEMP,DJU_CODTDC,DJU_PORCENTAJE,DJU_VALOR,DJU_ESTADO FROM pla_dju_descuento_judicial WHERE (DJU_CODCIA=:1) and (fasdf) order by DJU_CODEMP

SELECT Emp_codren FROM RHEPQ.PLA_EMP_EMPLEADO WHERE Emp_codren = '022' 



SELECT 
FROM RHEPQ.PLA_PUE_PUESTO P
INNER JOIN RHEPQ.PLA_TPP_TIPUESTO ON TP.TPP_CODIGO = P.PUE_CODIGO

------------- LLAVE PRIMARIA ---------------------
ALTER TABLE RHEPQ.PLA_CON_CONTRATO
ADD CONSTRAINT CON_CONTRATO_PK PRIMARY KEY (CON_CONTRATO);
------------- LLAVE PRIMARIA ---------------------


SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 98
SELECT * FROM RHEPQ.PLA_DPL_DATOSPLANILLA WHERE DPL_CODEMP = 2193
SELECT * FROM RHEPQ.PLA_INF_INGRESOS_FIJOS WHERE INF_CODEMP = 2193
SELECT * FROM RHEPQ.PLA_JOR_JORNADA 
SELECT * FROM RHEPQ.PLA_CON_CONTRATO pcc 


SELECT * FROM RHEPQ.PLA_BAN_BONO_ANTIGUEDAD

SELECT * FROM RHEPQ.SIDE_GEN_CIA sgc 




SELECT * FROM RHEPQ.REC_REQ_REQUISITO bpdd 


SELECT * FROM RHEPQ.PLA_MUN_MUNICIPIO pmm 

SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO pee WHERE EMP_CODIGO = 8146

--------------------

SELECT * 
FROM PRE_REN_RENGLONES 
WHERE REN_DESCRIPCION LIKE '%Jubilados%';

		
		SELECT * 
FROM ALL_PROCEDURES 
WHERE OBJECT_NAME = 'PLA_JOR_JORNADA' 
  AND OWNER = 'RHEPQ';
 
 
 
GRANT INSERT ON EPQOP.USERS_CONTROLSPWD TO RHEPQ;
GRANT SELECT ON ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO TO RHEPQ;


        SELECT LOWER(TO_CHAR(TRIM(EMP_PRIMER_NOM) || SUBSTR(TRIM(EMP_PRIMER_APE), 1, 1) || TRIM(EMP_CODIGO))) AS name
        FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 1258;
       

       SELECT * FROM RHEPQ       
       
     
	
	SELECT * FROM RHEPQ.PLA_AFI_AFICION
	
ALTER TABLE sysaudtemp.is_pla_emp_empleado
MODIFY EMP_USUARIO_MOD VARCHAR2(100);

SELECT table_name
FROM all_tables
WHERE UPPER(table_name) LIKE '%PLZ%';

ALTER TABLE RHEPQ.B_PLA_EMP_EMPLEADO
MODIFY EMP_USUARIO_MOD VARCHAR2(100);


--SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_CODIGO = 1088

SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_NOMBRE = 'BOMBERO PORTUARIO' 
SELECT * FROM PLA_PLZ_PLAZA WHERE PLZ_NOMBRE = 'ODONTOLOGO' 


SELECT * FROM PLA_PLZ_PLAZA ppp 

SELECT css_minimo
                    FROM pla_css_clasalarial
                    JOIN pla_plz_plaza ON pla_css_clasalarial.css_codcia = pla_plz_plaza.plz_codcia
                    JOIN pla_pue_puesto ON pla_pue_puesto.pue_codcia = pla_plz_plaza.plz_codcia
                                        AND pla_pue_puesto.pue_codtpp = pla_plz_plaza.plz_codtpp
                                        AND pla_pue_puesto.pue_codigo = pla_plz_plaza.plz_codpue
                    WHERE plz_codcia = '001'
                      AND plz_codigo = '1013'
                      AND css_codcia = '001'
                      AND css_codigo = '509';

SELECT *
FROM pla_inf_ingresos_fijos
WHERE inf_codcia = '001'
  AND inf_codemp = 2193
  AND inf_codtig = '01';
 
 SELECT ROWID,TIG_CODCIA,TIG_CODIGO,TIG_DESCRIPCION,TIG_NOMBRECORTO,TIG_CTA_CONTABLE,TIG_CONTABLE_CAT,TIG_CTA_CONTABLE2,TIG_CONTABLE_CAT2,TIG_CTA_PPTO1,TIG_CTA_PPTO2,TIG_RENTA,TIG_ISSS,TIG_AFP,TIG_SALARIO_PROM,TIG_ATCONSA,TIG_FONDO_VAC,TIG_DEVENGADO FROM PLA_TIG_TIPO_INGRESO WHERE (TIG_CODCIA=:1) and (fsdf)


SELECT * FROM RHEPQ.PLA_JOR_JORNADA  

SELECT * FROM PLA_DPL_DATOSPLANILLA WHERE DPL_CODPLZ = 1088

SELECT * FROM sysaudtemp.is_pla_emp_empleado
grant SELECT ON RHEPQ.IS_PLA_EMP_EMPLEADO TO RHEPQ;


-------------- LOGIN

  -- erickl2484

 SELECT 
                pwd.STATUS, 
                pwd.CODIGO_EMP,
                --acc.BIO_TIPO_MARCA,
                2 AS BIO_TIPO_MARCA,
                TRUNC(pwd.FECHA_VENCIMIENTO) - TRUNC(SYSDATE) AS DIAS_RESTANTES 
            FROM EPQOP.USERS_CONTROLSPWD pwd 
            LEFT JOIN RHEPQ.ACCESOS acc ON acc.BIO_ID = pwd.CODIGO_EMP
            WHERE pwd.NAME = 'AdminMaster01' AND ROWNUM = 1
            -- TRUNC(acc.BIO_FECHA) = TRUNC(SYSDATE)
            ORDER BY acc.BIO_CORRELATIVO DESC;
           
           SELECT 
		    UR.USUARIO, 
		    UR.DPI, 
		    UR.PASSWORD, 
		    UR.RESETEOPWD  
		FROM EPQOP.USUARIOS_REST UR
		INNER JOIN RHEPQ.ADMUSUARIO U ON U.USERNAME = UR.USUARIO
		WHERE RTRIM(UR.USUARIO) = RTRIM('AdminMaster01') AND U.ESTADO = 1;
           
	
	   		SELECT * FROM RHEPQ.ADMUSUARIO where USERNAME = 'erickl2484'
   		SELECT * FROM EPQOP.USERS_CONTROLSPWD WHERE name = 'AdminMaster01'
   		SELECT * FROM EPQOP.USUARIOS_REST WHERE usuario = 'AdminMaster01' 
		SELECT * FROM RHEPQ.ADMROLUSUARIO WHERE IDUSUARIO = 16
		SELECT * FROM RHEPQ.ADMUSUARIO WHERE EMP_CODIGO = 2484;
	SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 2484 ORDER BY BIO_CORRELATIVO DESC
	
	SELECT * FROM RHEPQ.ACCESOS WHERE BIO_ID = 999999
	
	SELECT EMP_USUARIO_CREA FROM RHEPQ.PLA_EMP_EMPLEADO pee ORDER BY EMP_USUARIO_CREA ASC
	
	SELECT EMP_USUARIO_CREA, EMP_USUARIO_MOD FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 29252

	SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 2193
		
--DELETE  FROM EPQOP.USERS_CONTROLSPWD WHERE NAME = 'erickl2484'
--DELETE  FROM EPQOP.USUARIOS_REST WHERE USUARIO = 'erickl2484'    
--DELETE FROM RHEPQ.ADMUSUARIO WHERE USERNAME = 'erickl2484'
--DELETE FROM RHEPQ.ADMROLUSUARIO WHERE IDUSUARIO = 33
	
	$2a$11$rLqormdpMk1g1V2sdOuwhOhkDjgNgit9PYZcRIrJSnvtvSUqJHwLe

	
	
	 SELECT JOR_CODIGO AS value, JOR_NOMBRE AS label
            FROM PLA_JOR_JORNADA
            WHERE JOR_CODCIA = '001';
	
	

			    SELECT COUNT(*)
		    FROM PLA_EMP_EMPLEADO
		    WHERE EMP_CODCIA = '001'  AND
		    (
		        '2193' IS NULL
		        OR '2193' = ''
		        OR LOWER(EMP_NOMBRE_ISSS) LIKE '%' || LOWER('2193') || '%'
		        OR TO_CHAR(EMP_CODIGO) = '2193' -- Buscar por código del empleado
		    );
		   
		   
   		    SELECT COUNT(*)
		    FROM PLA_EMP_EMPLEADO
		    WHERE EMP_CODCIA = '001' AND
		    (
		        'Emilsa MATTA' IS NULL
		        OR 'Emilsa MATTA' = ''
		        OR LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) LIKE '%' || LOWER(TRIM('Emilsa MATTA')) || '%'
		    );
		   
		   SELECT COUNT(*)
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND
      LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) LIKE '%emilsa matta%';

		   
		   SELECT * FROM RHEPQ.PLA_EMP_EMPLEADO WHERE EMP_CODIGO = 5
		   SELECT RHEPQ.CONCATENAR_NOMBRE_EMPLEADO(9901) FROM DUAL;
		  SELECT ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(9901) FROM DUAL;
		 
		 SELECT EMP_CODIGO, LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO)))
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND EMP_CODIGO = 2193;

 SELECT EMP_CODIGO, LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO)))
FROM PLA_EMP_EMPLEADO
WHERE EMP_CODCIA = '001' AND LOWER(TRIM(ISYSEPQ.GETNOMBRECOMPLETOEMPLEADO(EMP_CODIGO))) = ''
		  
		  SELECT 
    EMP_PRIMER_NOM, 
    EMP_SEGUNDO_NOM, 
    EMP_TERCER_NOM, 
    EMP_PRIMER_APE, 
    EMP_SEGUNDO_APE, 
    EMP_APELLIDO_CAS 
FROM RHEPQ.PLA_EMP_EMPLEADO 
WHERE EMP_CODIGO = 9901;